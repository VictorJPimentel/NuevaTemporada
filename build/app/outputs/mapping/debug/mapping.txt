# compiler: R8
# compiler_version: 1.5.64
# min_api: 21
# pg_map_id: caa6853
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.activity.Cancellable -> androidx.activity.a:
androidx.activity.ComponentActivity -> androidx.activity.b:
    androidx.lifecycle.ViewModelStore getViewModelStore() -> a
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    androidx.activity.ComponentActivity this$0 -> a
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    int sReflectedFieldsInitialized -> b
    android.app.Activity mActivity -> a
    38:38:void <clinit>() -> <clinit>
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    101:112:void initializeReflectiveFields() -> a
androidx.activity.OnBackPressedCallback -> androidx.activity.c:
    void removeCancellable(androidx.activity.Cancellable) -> a
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> a
    void onBackPressed() -> a
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    229:230:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    243:249:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.d:
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> s
androidx.arch.core.internal.FastSafeIterableMap -> a.a.a.a.a:
    java.util.HashMap mHashMap -> e
    35:37:void <init>() -> <init>
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    66:66:boolean contains(java.lang.Object) -> contains
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> a.a.a.a.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> b
    int mSize -> d
    java.util.WeakHashMap mIterators -> c
    35:43:void <init>() -> <init>
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    150:152:java.util.Iterator descendingIterator() -> a
    169:169:java.util.Map$Entry eldest() -> b
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> c
    176:176:java.util.Map$Entry newest() -> d
    181:201:boolean equals(java.lang.Object) -> equals
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> a.a.a.a.b$a:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> a.a.a.a.b$b:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> a.a.a.a.b$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    java.lang.Object mValue -> b
    java.lang.Object mKey -> a
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> a.a.a.a.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    boolean mBeforeStart -> b
    318:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> a.a.a.a.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    263:264:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> a.a.a.a.b$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.collection.ArrayMap -> a.b.a:
    androidx.collection.MapCollections mCollections -> h
    57:58:void <init>() -> <init>
    75:123:androidx.collection.MapCollections getCollection() -> b
    182:182:java.util.Set entrySet() -> entrySet
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> a.b.a$a:
    androidx.collection.ArrayMap this$0 -> d
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    84:84:java.lang.Object colGetEntry(int,int) -> a
    89:89:int colIndexOfKey(java.lang.Object) -> a
    104:105:void colPut(java.lang.Object,java.lang.Object) -> a
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> a
    114:115:void colRemoveAt(int) -> a
    119:120:void colClear() -> a
    94:94:int colIndexOfValue(java.lang.Object) -> b
    99:99:java.util.Map colGetMap() -> b
    79:79:int colGetSize() -> c
androidx.collection.ContainerHelpers -> a.b.b:
    java.lang.Object[] EMPTY_OBJECTS -> b
    int[] EMPTY_INTS -> a
    20:22:void <clinit>() -> <clinit>
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> a
    46:61:int binarySearch(int[],int,int) -> a
androidx.collection.MapCollections -> a.b.c:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    32:32:void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    490:495:java.lang.Object[] toArrayHelper(int) -> b
    int colGetSize() -> c
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    533:536:java.util.Set getEntrySet() -> d
    540:543:java.util.Set getKeySet() -> e
    547:550:java.util.Collection getValues() -> f
androidx.collection.MapCollections$ArrayIterator -> a.b.c$a:
    androidx.collection.MapCollections this$0 -> e
    int mSize -> b
    int mIndex -> c
    int mOffset -> a
    boolean mCanRemove -> d
    43:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> a.b.c$b:
    androidx.collection.MapCollections this$0 -> a
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    170:170:boolean add(java.util.Map$Entry) -> a
    167:167:boolean add(java.lang.Object) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> a.b.c$c:
    androidx.collection.MapCollections this$0 -> a
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> a.b.c$d:
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    int mEnd -> a
    79:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> a.b.c$e:
    androidx.collection.MapCollections this$0 -> a
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> a.b.d:
    java.lang.Object[] mBaseCache -> d
    java.lang.Object[] mArray -> b
    int mTwiceBaseCacheSize -> g
    int mBaseCacheSize -> e
    int[] mHashes -> a
    int mSize -> c
    java.lang.Object[] mTwiceBaseCache -> f
    236:240:void <init>() -> <init>
    77:80:int binarySearchHashes(int[],int,int) -> a
    88:122:int indexOf(java.lang.Object,int) -> a
    126:160:int indexOfNull() -> a
    201:230:void freeArrays(int[],java.lang.Object[],int) -> a
    289:301:void ensureCapacity(int) -> a
    322:322:int indexOfKey(java.lang.Object) -> a
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> a
    326:341:int indexOfValue(java.lang.Object) -> b
    390:390:java.lang.Object keyAt(int) -> b
    570:623:java.lang.Object removeAt(int) -> c
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    399:399:java.lang.Object valueAt(int) -> d
    165:197:void allocArrays(int) -> e
    681:735:boolean equals(java.lang.Object) -> equals
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    419:419:boolean isEmpty() -> isEmpty
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
androidx.core.app.ComponentActivity -> androidx.core.app.a:
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:76:java.lang.Object checkCompatWrapper(java.lang.Object) -> a
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    177:177:void <clinit>() -> <clinit>
    308:309:void <init>() -> <init>
    357:361:int getResId() -> a
    749:754:void onPreParceling(boolean) -> a
    817:818:java.lang.String typeToString(int) -> a
    973:980:int getResId(android.graphics.drawable.Icon) -> a
    339:343:java.lang.String getResPackage() -> b
    944:951:java.lang.String getResPackage(android.graphics.drawable.Icon) -> b
    785:791:void onPostParceling() -> c
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.view.KeyEventDispatcher$Component -> a.c.a.a:
androidx.fragment.app.Fragment -> androidx.fragment.app.a:
    android.view.View mView -> a
    98:98:void <clinit>() -> <clinit>
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    androidx.fragment.app.Fragment this$0 -> a
    475:480:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a:
    void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    32:39:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.FullLifecycleObserver -> androidx.lifecycle.b:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onPause(androidx.lifecycle.LifecycleOwner) -> b
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> c
    void onStop(androidx.lifecycle.LifecycleOwner) -> d
    void onCreate(androidx.lifecycle.LifecycleOwner) -> e
    void onStart(androidx.lifecycle.LifecycleOwner) -> f
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    34:59:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.c:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.GenericLifecycleObserver -> androidx.lifecycle.d:
androidx.lifecycle.Lifecycle -> androidx.lifecycle.e:
    78:85:void <init>() -> <init>
    androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> a
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.e$a:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.e$b:
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
    androidx.lifecycle.Lifecycle$State RESUMED -> e
    androidx.lifecycle.Lifecycle$State STARTED -> d
    androidx.lifecycle.Lifecycle$State CREATED -> c
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> a
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.f:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.g:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.h:
    androidx.lifecycle.Lifecycle getLifecycle() -> c
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.i:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    94:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> a
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    261:263:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> a
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> a
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> a
    135:142:void moveToState(androidx.lifecycle.Lifecycle$State) -> b
    150:155:boolean isSynced() -> b
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> b
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> b
    202:203:void popParentState() -> c
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> c
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> d
    325:327:void sync() -> d
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.i$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> b
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.i$b:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    androidx.lifecycle.LifecycleEventObserver val$observer -> a
    61:62:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    int mActiveCount -> a
    64:64:void <clinit>() -> <clinit>
    void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> a
    void onActive() -> a
    void removeObserver(androidx.lifecycle.Observer) -> a
    void onInactive() -> b
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> e
    androidx.lifecycle.LifecycleOwner mOwner -> d
    367:367:boolean shouldBeActive() -> a
    372:377:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.LiveData this$0 -> c
    androidx.lifecycle.Observer mObserver -> a
    boolean mActive -> b
    409:426:void activeStateChanged(boolean) -> a
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.j:
    28:29:void <init>() -> <init>
androidx.lifecycle.Observer -> androidx.lifecycle.k:
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    31:33:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.l:
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.m:
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    48:53:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.a:
    boolean mAllowingSavingState -> a
    android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> a
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.b:
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> t
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
    60:60:void <clinit>() -> <clinit>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
    androidx.collection.ArrayMap mParcelizerCache -> c
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    void closeField() -> a
    boolean readField(int) -> a
    void writeBoolean(boolean) -> a
    void writeByteArray(byte[]) -> a
    void writeCharSequence(java.lang.CharSequence) -> a
    void writeParcelable(android.os.Parcelable) -> a
    void writeString(java.lang.String) -> a
    269:269:void setSerializationFlags(boolean,boolean) -> a
    399:402:boolean readBoolean(boolean,int) -> a
    409:412:int readInt(int,int) -> a
    451:454:java.lang.String readString(java.lang.String,int) -> a
    472:475:byte[] readByteArray(byte[],int) -> a
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> a
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> a
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> a
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> a
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> a
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> a
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    void setOutputField(int) -> b
    294:296:void writeBoolean(boolean,int) -> b
    304:306:void writeByteArray(byte[],int) -> b
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> b
    334:336:void writeInt(int,int) -> b
    370:372:void writeString(java.lang.String,int) -> b
    391:393:void writeParcelable(android.os.Parcelable,int) -> b
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> b
    1040:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> b
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> b
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> b
    void writeInt(int) -> c
    96:96:boolean isStream() -> c
    boolean readBoolean() -> d
    byte[] readByteArray() -> e
    java.lang.CharSequence readCharSequence() -> f
    int readInt() -> g
    android.os.Parcelable readParcelable() -> h
    java.lang.String readString() -> i
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> j
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
    android.util.SparseIntArray mPositionLookup -> d
    java.lang.String mPrefix -> h
    int mNextRead -> j
    android.os.Parcel mParcel -> e
    int mFieldId -> k
    int mCurrentField -> i
    int mOffset -> f
    int mEnd -> g
    51:54:void <init>(android.os.Parcel) -> <init>
    60:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    70:84:boolean readField(int) -> a
    99:111:void closeField() -> a
    126:132:void writeByteArray(byte[]) -> a
    166:167:void writeString(java.lang.String) -> a
    176:177:void writeParcelable(android.os.Parcelable) -> a
    181:182:void writeBoolean(boolean) -> a
    196:197:void writeCharSequence(java.lang.CharSequence) -> a
    89:95:void setOutputField(int) -> b
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    146:147:void writeInt(int) -> c
    258:258:boolean readBoolean() -> d
    236:242:byte[] readByteArray() -> e
    201:201:java.lang.CharSequence readCharSequence() -> f
    206:206:int readInt() -> g
    248:248:android.os.Parcelable readParcelable() -> h
    226:226:java.lang.String readString() -> i
androidx.versionedparcelable.VersionedParcelable -> androidx.versionedparcelable.c:
androidx.webkit.SafeBrowsingResponseCompat -> androidx.webkit.a:
    75:76:void <init>() -> <init>
    void showInterstitial(boolean) -> a
androidx.webkit.WebResourceErrorCompat -> androidx.webkit.b:
    93:94:void <init>() -> <init>
    java.lang.CharSequence getDescription() -> a
    int getErrorCode() -> b
androidx.webkit.WebViewClientCompat -> androidx.webkit.WebViewClientCompat:
    java.lang.String[] sSupportedFeatures -> a
    51:51:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat) -> a
    250:257:void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat) -> a
    79:79:java.lang.String[] getSupportedFeatures() -> getSupportedFeatures
    116:116:void onPageCommitVisible(android.webkit.WebView,java.lang.String) -> onPageCommitVisible
    130:131:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler) -> onReceivedError
    144:146:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    200:200:void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse) -> onReceivedHttpError
    214:215:void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler) -> onSafeBrowsingHit
    228:229:void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse) -> onSafeBrowsingHit
androidx.webkit.WebViewFeature -> androidx.webkit.c:
    434:435:boolean isFeatureSupported(java.lang.String) -> a
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory -> androidx.webkit.d.a:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    34:34:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    57:57:java.lang.String[] getWebViewFeatures() -> a
    47:47:org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter() -> getWebkitToCompatConverter
androidx.webkit.internal.SafeBrowsingResponseImpl -> androidx.webkit.d.b:
    org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface -> b
    android.webkit.SafeBrowsingResponse mFrameworksImpl -> a
    52:55:void <init>(java.lang.reflect.InvocationHandler) -> <init>
    57:59:void <init>(android.webkit.SafeBrowsingResponse) -> <init>
    72:78:org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface() -> a
    84:92:void showInterstitial(boolean) -> a
    63:68:android.webkit.SafeBrowsingResponse getFrameworksImpl() -> b
androidx.webkit.internal.WebResourceErrorImpl -> androidx.webkit.d.c:
    android.webkit.WebResourceError mFrameworksImpl -> a
    org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface mBoundaryInterface -> b
    52:55:void <init>(java.lang.reflect.InvocationHandler) -> <init>
    57:59:void <init>(android.webkit.WebResourceError) -> <init>
    98:105:java.lang.CharSequence getDescription() -> a
    83:90:int getErrorCode() -> b
    71:77:org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface getBoundaryInterface() -> c
    63:67:android.webkit.WebResourceError getFrameworksImpl() -> d
androidx.webkit.internal.WebViewFeatureInternal -> androidx.webkit.d.d:
    androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_ERROR_GET_CODE -> w
    androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_REQUEST_IS_REDIRECT -> u
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_PROCEED -> y
    androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_SET_MESSAGE_CALLBACK -> C
    androidx.webkit.internal.WebViewFeatureInternal VISUAL_STATE_CALLBACK_FEATURE -> d
    boolean $assertionsDisabled -> R
    androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_POST_MESSAGE -> A
    androidx.webkit.internal.WebViewFeatureInternal DISABLED_ACTION_MODE_MENU_ITEMS -> g
    androidx.webkit.internal.WebViewFeatureInternal GET_WEB_CHROME_CLIENT -> H
    androidx.webkit.internal.WebViewFeatureInternal OFF_SCREEN_PRERASTER -> e
    androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_CALLBACK_ON_MESSAGE -> F
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_BASIC_USAGE -> k
    androidx.webkit.internal.WebViewFeatureInternal WEB_VIEW_RENDERER_CLIENT_BASIC_USAGE -> L
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_WHITELIST -> i
    androidx.webkit.internal.WebViewFeatureInternal WEB_VIEW_RENDERER_TERMINATE -> J
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_BLOCK_NETWORK_LOADS -> o
    androidx.webkit.internal.WebViewFeatureInternal FORCE_DARK -> P
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_CONTENT_ACCESS -> m
    java.lang.String mPublicFeatureValue -> a
    androidx.webkit.internal.WebViewFeatureInternal SUPPRESS_ERROR_PAGE -> N
    androidx.webkit.internal.WebViewFeatureInternal SHOULD_OVERRIDE_WITH_REDIRECTS -> s
    androidx.webkit.internal.WebViewFeatureInternal RECEIVE_WEB_RESOURCE_ERROR -> q
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_BACK_TO_SAFETY -> x
    androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_ERROR_GET_DESCRIPTION -> v
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_SHOW_INTERSTITIAL -> z
    androidx.webkit.internal.WebViewFeatureInternal[] $VALUES -> Q
    androidx.webkit.internal.WebViewFeatureInternal CREATE_WEB_MESSAGE_CHANNEL -> D
    int mOsVersion -> c
    androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_CLOSE -> B
    androidx.webkit.internal.WebViewFeatureInternal GET_WEB_VIEW_CLIENT -> G
    androidx.webkit.internal.WebViewFeatureInternal START_SAFE_BROWSING -> h
    androidx.webkit.internal.WebViewFeatureInternal POST_WEB_MESSAGE -> E
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_ENABLE -> f
    androidx.webkit.internal.WebViewFeatureInternal TRACING_CONTROLLER_BASIC_USAGE -> K
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_CACHE_MODE -> l
    androidx.webkit.internal.WebViewFeatureInternal GET_WEB_VIEW_RENDERER -> I
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_PRIVACY_POLICY_URL -> j
    androidx.webkit.internal.WebViewFeatureInternal MULTI_PROCESS_QUERY -> O
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_SHOULD_INTERCEPT_REQUEST -> p
    androidx.webkit.internal.WebViewFeatureInternal PROXY_OVERRIDE -> M
    androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_FILE_ACCESS -> n
    androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_HIT -> t
    java.lang.String mInternalFeatureValue -> b
    androidx.webkit.internal.WebViewFeatureInternal RECEIVE_HTTP_ERROR -> r
    57:57:void <clinit>() -> <clinit>
    360:361:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    372:378:void <init>(java.lang.String,int,java.lang.String,java.lang.String,int) -> <init>
    385:390:androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String) -> a
    398:401:boolean isSupportedByFramework() -> a
    408:408:boolean isSupportedByWebView() -> b
    427:427:java.lang.UnsupportedOperationException getUnsupportedOperationException() -> c
    57:57:androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String) -> valueOf
    57:57:androidx.webkit.internal.WebViewFeatureInternal[] values() -> values
androidx.webkit.internal.WebViewFeatureInternal$LAZY_HOLDER -> androidx.webkit.d.d$a:
    java.util.Set WEBVIEW_APK_FEATURES -> a
    413:413:void <clinit>() -> <clinit>
androidx.webkit.internal.WebViewGlueCommunicator -> androidx.webkit.d.e:
    71:81:androidx.webkit.internal.WebViewProviderFactory createGlueProviderFactory() -> a
    61:65:java.lang.reflect.InvocationHandler fetchGlueProviderFactoryImpl() -> b
    46:46:androidx.webkit.internal.WebkitToCompatConverter getCompatConverter() -> c
    42:42:androidx.webkit.internal.WebViewProviderFactory getFactory() -> d
    99:102:java.lang.ClassLoader getWebViewClassLoader() -> e
    109:113:java.lang.Object getWebViewProviderFactory() -> f
androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER -> androidx.webkit.d.e$a:
    androidx.webkit.internal.WebkitToCompatConverter INSTANCE -> a
    55:55:void <clinit>() -> <clinit>
androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER -> androidx.webkit.d.e$b:
    androidx.webkit.internal.WebViewProviderFactory INSTANCE -> a
    51:50:void <clinit>() -> <clinit>
androidx.webkit.internal.WebViewProviderFactory -> androidx.webkit.d.f:
    java.lang.String[] getWebViewFeatures() -> a
androidx.webkit.internal.WebViewProviderFactoryAdapter -> androidx.webkit.d.g:
    org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface mImpl -> a
    38:40:void <init>(org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface) -> <init>
    79:79:java.lang.String[] getWebViewFeatures() -> a
    60:60:org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter() -> getWebkitToCompatConverter
androidx.webkit.internal.WebkitToCompatConverter -> androidx.webkit.d.h:
    org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl -> a
    45:47:void <init>(org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface) -> <init>
    96:96:java.lang.reflect.InvocationHandler convertWebResourceError(android.webkit.WebResourceError) -> a
    116:116:java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(android.webkit.SafeBrowsingResponse) -> a
    127:127:android.webkit.SafeBrowsingResponse convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler) -> a
    107:107:android.webkit.WebResourceError convertWebResourceError(java.lang.reflect.InvocationHandler) -> b
com.example.nueva_temporada.MainActivity -> com.example.nueva_temporada.MainActivity:
    5:5:void <init>() -> <init>
io.flutter.FlutterInjector -> b.a.a:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager -> b
    io.flutter.FlutterInjector instance -> c
    21:21:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.FlutterInjector$1) -> <init>
    68:71:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager) -> <init>
    88:88:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager() -> a
    79:79:io.flutter.embedding.engine.loader.FlutterLoader flutterLoader() -> b
    52:56:io.flutter.FlutterInjector instance() -> c
io.flutter.FlutterInjector$1 -> b.a.a$a:
io.flutter.FlutterInjector$Builder -> b.a.a$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager -> b
    97:97:void <init>() -> <init>
    128:130:io.flutter.FlutterInjector build() -> a
    117:121:void fillDefaults() -> b
io.flutter.Log -> b.a.b:
    int logLevel -> a
    14:21:void <clinit>() -> <clinit>
    64:67:void d(java.lang.String,java.lang.String) -> a
    88:89:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    80:81:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    84:85:void e(java.lang.String,java.lang.String) -> b
    52:55:void i(java.lang.String,java.lang.String) -> c
    40:43:void v(java.lang.String,java.lang.String) -> d
    76:77:void w(java.lang.String,java.lang.String) -> e
io.flutter.app.FlutterApplication -> io.flutter.app.FlutterApplication:
    19:27:void <init>() -> <init>
    23:25:void onCreate() -> onCreate
io.flutter.embedding.android.AndroidKeyProcessor -> io.flutter.embedding.android.a:
    io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel -> a
    int combiningCharacter -> b
    io.flutter.embedding.android.AndroidKeyProcessor$EventResponder eventResponder -> c
    64:70:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.KeyEventChannel,io.flutter.plugin.editing.TextInputPlugin) -> <init>
    78:79:void destroy() -> a
    127:127:boolean isPendingEvent(android.view.KeyEvent) -> a
    159:186:java.lang.Character applyCombiningCharacterToBaseCharacter(int) -> a
    90:115:boolean onKeyEvent(android.view.KeyEvent) -> b
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder -> io.flutter.embedding.android.a$a:
    java.util.Deque pendingEvents -> a
    android.view.View view -> b
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> c
    197:200:void <init>(android.view.View,io.flutter.plugin.editing.TextInputPlugin) -> <init>
    189:189:void access$000(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent) -> a
    236:237:void onKeyEventNotHandled(android.view.KeyEvent) -> a
    189:189:android.view.KeyEvent access$100(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent) -> b
    225:226:void onKeyEventHandled(android.view.KeyEvent) -> b
    241:250:void addEvent(android.view.KeyEvent) -> c
    208:215:android.view.KeyEvent findPendingEvent(android.view.KeyEvent) -> d
    261:273:void redispatchKeyEvent(android.view.KeyEvent) -> e
    204:205:void removePendingEvent(android.view.KeyEvent) -> f
io.flutter.embedding.android.AndroidTouchProcessor -> io.flutter.embedding.android.b:
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> a
    android.graphics.Matrix IDENTITY_TRANSFORM -> d
    boolean trackMotionEvents -> c
    73:73:void <clinit>() -> <clinit>
    83:87:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean) -> <init>
    95:138:boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix) -> a
    157:164:boolean onGenericMotionEvent(android.view.MotionEvent) -> a
    191:298:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer) -> a
    303:329:int getPointerChangeForAction(int) -> a
    90:90:boolean onTouchEvent(android.view.MotionEvent) -> b
    334:336:int getPointerDeviceTypeForToolType(int) -> b
io.flutter.embedding.android.DrawableSplashScreen -> io.flutter.embedding.android.c:
    android.widget.ImageView$ScaleType scaleType -> b
    io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView -> d
    long crossfadeDurationInMillis -> c
    android.graphics.drawable.Drawable drawable -> a
    32:33:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:52:void <init>(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long) -> <init>
    boolean doesSplashViewRememberItsTransition() -> a
    57:59:android.view.View createSplashView(android.content.Context,android.os.Bundle) -> a
    64:91:void transitionToFlutter(java.lang.Runnable) -> a
    android.os.Bundle saveSplashScreenState() -> b
io.flutter.embedding.android.DrawableSplashScreen$1 -> io.flutter.embedding.android.c$a:
    java.lang.Runnable val$onTransitionComplete -> a
    74:74:void <init>(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable) -> <init>
    85:86:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    80:81:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    89:89:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    76:76:void onAnimationStart(android.animation.Animator) -> onAnimationStart
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView -> io.flutter.embedding.android.c$b:
    96:97:void <init>(android.content.Context) -> <init>
    105:106:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:116:void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType) -> a
    109:110:void setSplashDrawable(android.graphics.drawable.Drawable) -> setSplashDrawable
io.flutter.embedding.android.ExclusiveAppComponent -> io.flutter.embedding.android.d:
    void detachFromFlutterEngine() -> d
    java.lang.Object getAppComponent() -> e
io.flutter.embedding.android.FlutterActivity -> io.flutter.embedding.android.e:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate -> a
    androidx.lifecycle.LifecycleRegistry lifecycle -> b
    383:385:void <init>() -> <init>
    518:518:android.view.View createFlutterView() -> A
    488:497:android.graphics.drawable.Drawable getSplashScreenFromManifest() -> B
    831:831:boolean isDebuggable() -> C
    586:590:void release() -> D
    450:464:void switchLaunchThemeForNormalTheme() -> E
    881:881:io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context) -> a
    905:905:io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine) -> a
    920:921:void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> a
    996:996:void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView) -> a
    1001:1001:void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView) -> a
    1009:1012:void onFlutterUiDisplayed() -> a
    1038:1042:boolean stillAttachedForEvent(java.lang.String) -> a
    932:932:void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> b
    1017:1017:void onFlutterUiNoLongerDisplayed() -> b
    689:689:androidx.lifecycle.Lifecycle getLifecycle() -> c
    594:602:void detachFromFlutterEngine() -> d
    678:678:android.app.Activity getActivity() -> e
    783:793:java.lang.String getInitialRoute() -> f
    700:700:io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs() -> g
    815:822:java.lang.String getAppBundlePath() -> h
    970:970:boolean shouldAttachEngineToActivity() -> i
    842:842:io.flutter.embedding.android.RenderMode getRenderMode() -> j
    725:729:boolean shouldDestroyEngineWithHost() -> k
    984:989:boolean shouldHandleDeeplinking() -> l
    853:853:io.flutter.embedding.android.TransparencyMode getTransparencyMode() -> m
    711:711:java.lang.String getCachedEngineId() -> n
    1021:1028:boolean shouldRestoreAndSaveState() -> o
    615:618:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    631:634:void onBackPressed() -> onBackPressed
    404:417:void onCreate(android.os.Bundle) -> onCreate
    606:611:void onDestroy() -> onDestroy
    623:627:void onNewIntent(android.content.Intent) -> onNewIntent
    553:556:void onPause() -> onPause
    547:549:void onPostResume() -> onPostResume
    639:642:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    540:543:void onResume() -> onResume
    569:573:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    533:536:void onStart() -> onStart
    560:565:void onStop() -> onStop
    653:657:void onTrimMemory(int) -> onTrimMemory
    646:649:void onUserLeaveHint() -> onUserLeaveHint
    749:754:java.lang.String getDartEntrypointFunctionName() -> p
    469:473:io.flutter.embedding.android.SplashScreen provideSplashScreen() -> q
    666:666:android.content.Context getContext() -> r
    1034:1034:boolean popSystemNavigator() -> u
    864:867:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode() -> v
    890:890:io.flutter.embedding.engine.FlutterEngine getFlutterEngine() -> w
    896:898:android.os.Bundle getMetaData() -> x
    523:529:void configureStatusBarForFullscreenFlutterExperience() -> y
    510:514:void configureWindowForTransparency() -> z
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate -> io.flutter.embedding.android.f:
    io.flutter.embedding.android.FlutterSplashView flutterSplashView -> c
    io.flutter.plugin.platform.PlatformPlugin platformPlugin -> e
    io.flutter.embedding.android.FlutterView flutterView -> d
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> g
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    boolean isFlutterEngineFromHost -> f
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host -> a
    94:96:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host) -> <init>
    66:66:io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate) -> a
    121:121:io.flutter.embedding.engine.FlutterEngine getFlutterEngine() -> a
    150:181:void onAttach(android.content.Context) -> a
    266:306:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    310:329:void onRestoreInstanceState(android.os.Bundle) -> a
    612:633:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    644:655:void onNewIntent(android.content.Intent) -> a
    664:681:void onActivityResult(int,int,android.content.Intent) -> a
    710:724:void onTrimMemory(int) -> a
    129:129:boolean isFlutterEngineFromHost() -> b
    399:409:java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent) -> b
    497:511:void onSaveInstanceState(android.os.Bundle) -> b
    595:602:void onBackPressed() -> c
    515:518:void detachFromFlutterEngine() -> d
    66:66:java.lang.Object getAppComponent() -> e
    185:187:android.app.Activity getAppComponent() -> e
    489:494:void onDestroyView() -> f
    547:584:void onDetach() -> g
    459:462:void onPause() -> h
    436:450:void onPostResume() -> i
    419:422:void onResume() -> j
    343:346:void onStart() -> k
    478:481:void onStop() -> l
    692:699:void onUserLeaveHint() -> m
    109:113:void release() -> n
    210:246:void setupFlutterEngine() -> o
    358:396:void doInitialFlutterViewRun() -> p
    747:748:void ensureAlive() -> q
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1 -> io.flutter.embedding.android.f$a:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> a
    82:82:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate) -> <init>
    85:86:void onFlutterUiDisplayed() -> a
    90:91:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host -> io.flutter.embedding.android.f$b:
    void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> a
    void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView) -> a
    void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView) -> a
    void onFlutterUiDisplayed() -> a
    io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context) -> a
    io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine) -> a
    void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> b
    void onFlutterUiNoLongerDisplayed() -> b
    androidx.lifecycle.Lifecycle getLifecycle() -> c
    void detachFromFlutterEngine() -> d
    android.app.Activity getActivity() -> e
    java.lang.String getInitialRoute() -> f
    io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs() -> g
    java.lang.String getAppBundlePath() -> h
    boolean shouldAttachEngineToActivity() -> i
    io.flutter.embedding.android.RenderMode getRenderMode() -> j
    boolean shouldDestroyEngineWithHost() -> k
    boolean shouldHandleDeeplinking() -> l
    io.flutter.embedding.android.TransparencyMode getTransparencyMode() -> m
    java.lang.String getCachedEngineId() -> n
    boolean shouldRestoreAndSaveState() -> o
    java.lang.String getDartEntrypointFunctionName() -> p
    io.flutter.embedding.android.SplashScreen provideSplashScreen() -> q
    android.content.Context getContext() -> r
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode -> io.flutter.embedding.android.g:
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque -> a
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent -> b
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES -> c
    37:35:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String) -> valueOf
    35:35:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values() -> values
io.flutter.embedding.android.FlutterEngineConfigurator -> io.flutter.embedding.android.h:
io.flutter.embedding.android.FlutterEngineProvider -> io.flutter.embedding.android.i:
io.flutter.embedding.android.FlutterImageView -> io.flutter.embedding.android.j:
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> e
    java.util.Queue imageQueue -> b
    android.media.Image currentImage -> c
    io.flutter.embedding.android.FlutterImageView$SurfaceKind kind -> f
    android.graphics.Bitmap currentBitmap -> d
    boolean isAttachedToFlutterRenderer -> g
    android.media.ImageReader imageReader -> a
    74:75:void <init>(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind) -> <init>
    88:93:void <init>(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind) -> <init>
    131:146:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    179:179:void pause() -> a
    214:228:void resizeIfNeeded(int,int) -> a
    102:110:android.media.ImageReader createImageReader(int,int) -> b
    153:175:void detachFromRenderer() -> b
    187:209:boolean acquireLatestImage() -> c
    96:97:void init() -> d
    248:271:void updateCurrentBitmap() -> e
    122:122:io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer() -> getAttachedRenderer
    116:116:android.view.Surface getSurface() -> getSurface
    232:244:void onDraw(android.graphics.Canvas) -> onDraw
    275:287:void onSizeChanged(int,int,int,int) -> onSizeChanged
io.flutter.embedding.android.FlutterImageView$1 -> io.flutter.embedding.android.j$a:
    int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind -> a
    134:134:void <clinit>() -> <clinit>
io.flutter.embedding.android.FlutterImageView$SurfaceKind -> io.flutter.embedding.android.j$b:
    io.flutter.embedding.android.FlutterImageView$SurfaceKind background -> a
    io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES -> c
    io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay -> b
    50:48:void <clinit>() -> <clinit>
    48:48:void <init>(java.lang.String,int) -> <init>
    48:48:io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String) -> valueOf
    48:48:io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values() -> values
io.flutter.embedding.android.FlutterSplashView -> io.flutter.embedding.android.FlutterSplashView:
    io.flutter.embedding.android.SplashScreen splashScreen -> a
    java.lang.String previousCompletedSplashIsolate -> f
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> h
    java.lang.Runnable onTransitionComplete -> i
    java.lang.String TAG -> j
    io.flutter.embedding.android.FlutterView flutterView -> b
    android.os.Bundle splashScreenState -> d
    io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener -> g
    android.view.View splashScreenView -> c
    java.lang.String transitioningIsolateId -> e
    26:26:void <clinit>() -> <clinit>
    75:76:void <init>(android.content.Context) -> <init>
    84:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    25:25:io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView) -> a
    25:25:java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String) -> a
    118:156:void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen) -> a
    220:221:boolean hasSplashCompleted() -> a
    25:25:io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView) -> b
    165:165:boolean isSplashScreenNeededNow() -> b
    25:25:void access$200(io.flutter.embedding.android.FlutterSplashView) -> c
    179:179:boolean isSplashScreenTransitionNeededNow() -> c
    25:25:android.view.View access$300(io.flutter.embedding.android.FlutterSplashView) -> d
    249:253:void transitionToFlutter() -> d
    25:25:java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView) -> e
    194:195:boolean wasPreviousSplashTransitionInterrupted() -> e
    102:106:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    92:97:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
io.flutter.embedding.android.FlutterSplashView$1 -> io.flutter.embedding.android.FlutterSplashView$a:
    io.flutter.embedding.android.FlutterSplashView this$0 -> a
    37:37:void <init>(io.flutter.embedding.android.FlutterSplashView) -> <init>
    40:42:void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine) -> a
    45:45:void onFlutterEngineDetachedFromFlutterView() -> a
io.flutter.embedding.android.FlutterSplashView$2 -> io.flutter.embedding.android.FlutterSplashView$b:
    io.flutter.embedding.android.FlutterSplashView this$0 -> a
    50:50:void <init>(io.flutter.embedding.android.FlutterSplashView) -> <init>
    53:56:void onFlutterUiDisplayed() -> a
    61:61:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.android.FlutterSplashView$3 -> io.flutter.embedding.android.FlutterSplashView$c:
    io.flutter.embedding.android.FlutterSplashView this$0 -> a
    66:66:void <init>(io.flutter.embedding.android.FlutterSplashView) -> <init>
    69:71:void run() -> run
io.flutter.embedding.android.FlutterSplashView$SavedState -> io.flutter.embedding.android.FlutterSplashView$SavedState:
    257:257:void <clinit>() -> <clinit>
    274:275:void <init>(android.os.Parcelable) -> <init>
    278:281:void <init>(android.os.Parcel) -> <init>
    256:256:java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState) -> access$600
    256:256:java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String) -> access$602
    256:256:android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState) -> access$700
    256:256:android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle) -> access$702
    285:288:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.flutter.embedding.android.FlutterSplashView$SavedState$1 -> io.flutter.embedding.android.FlutterSplashView$SavedState$a:
    258:258:void <init>() -> <init>
    258:258:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    261:261:io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    258:258:java.lang.Object[] newArray(int) -> newArray
    266:266:io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int) -> newArray
io.flutter.embedding.android.FlutterSurfaceView -> io.flutter.embedding.android.k:
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    android.view.SurfaceHolder$Callback surfaceCallback -> e
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> f
    boolean renderTransparently -> a
    boolean isSurfaceAvailableForRendering -> b
    boolean isAttachedToFlutterRenderer -> c
    107:108:void <init>(android.content.Context,boolean) -> <init>
    117:120:void <init>(android.content.Context,android.util.AttributeSet,boolean) -> <init>
    35:35:boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean) -> a
    35:35:boolean access$100(io.flutter.embedding.android.FlutterSurfaceView) -> a
    35:35:void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int) -> a
    181:203:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    240:248:void pause() -> a
    262:263:void changeSurfaceSize(int,int) -> a
    35:35:void access$200(io.flutter.embedding.android.FlutterSurfaceView) -> b
    213:233:void detachFromRenderer() -> b
    35:35:void access$400(io.flutter.embedding.android.FlutterSurfaceView) -> c
    252:253:void connectSurfaceToRenderer() -> c
    35:35:io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView) -> d
    278:279:void disconnectSurfaceFromRenderer() -> d
    125:137:void init() -> e
    147:158:boolean gatherTransparentRegion(android.graphics.Region) -> gatherTransparentRegion
    164:164:io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer() -> getAttachedRenderer
io.flutter.embedding.android.FlutterSurfaceView$1 -> io.flutter.embedding.android.k$a:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
    47:47:void <init>(io.flutter.embedding.android.FlutterSurfaceView) -> <init>
    61:65:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    50:56:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    69:75:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
io.flutter.embedding.android.FlutterSurfaceView$2 -> io.flutter.embedding.android.k$b:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
    79:79:void <init>(io.flutter.embedding.android.FlutterSurfaceView) -> <init>
    82:89:void onFlutterUiDisplayed() -> a
    94:94:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.android.FlutterTextureView -> io.flutter.embedding.android.l:
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> c
    android.view.TextureView$SurfaceTextureListener surfaceTextureListener -> e
    android.view.Surface renderSurface -> d
    boolean isSurfaceAvailableForRendering -> a
    boolean isAttachedToFlutterRenderer -> b
    95:96:void <init>(android.content.Context) -> <init>
    100:102:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    33:33:boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean) -> a
    33:33:boolean access$100(io.flutter.embedding.android.FlutterTextureView) -> a
    33:33:void access$300(io.flutter.embedding.android.FlutterTextureView,int,int) -> a
    130:149:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    181:187:void pause() -> a
    202:203:void changeSurfaceSize(int,int) -> a
    33:33:void access$200(io.flutter.embedding.android.FlutterTextureView) -> b
    159:174:void detachFromRenderer() -> b
    33:33:void access$400(io.flutter.embedding.android.FlutterTextureView) -> c
    191:192:void connectSurfaceToRenderer() -> c
    218:219:void disconnectSurfaceFromRenderer() -> d
    107:108:void init() -> e
    113:113:io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer() -> getAttachedRenderer
io.flutter.embedding.android.FlutterTextureView$1 -> io.flutter.embedding.android.l$a:
    io.flutter.embedding.android.FlutterTextureView this$0 -> a
    46:46:void <init>(io.flutter.embedding.android.FlutterTextureView) -> <init>
    50:59:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    77:89:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    64:68:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    73:73:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
io.flutter.embedding.android.FlutterView -> io.flutter.embedding.android.m:
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> h
    io.flutter.embedding.android.FlutterTextureView flutterTextureView -> b
    io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin -> j
    io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics -> p
    io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView -> a
    java.util.Set flutterEngineAttachmentListeners -> i
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> q
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> n
    io.flutter.view.AccessibilityBridge accessibilityBridge -> o
    io.flutter.embedding.engine.renderer.RenderSurface renderSurface -> d
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> k
    io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface -> e
    java.util.Set flutterUiDisplayListeners -> f
    io.flutter.embedding.android.FlutterImageView flutterImageView -> c
    boolean isFlutterUiDisplayed -> g
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> l
    io.flutter.embedding.android.AndroidKeyProcessor androidKeyProcessor -> m
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> r
    211:212:void <init>(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView) -> <init>
    223:224:void <init>(android.content.Context,io.flutter.embedding.android.FlutterTextureView) -> <init>
    280:286:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView) -> <init>
    292:298:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView) -> <init>
    77:77:void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean) -> a
    77:77:boolean access$102(io.flutter.embedding.android.FlutterView,boolean) -> a
    77:77:java.util.Set access$200(io.flutter.embedding.android.FlutterView) -> a
    361:362:void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> a
    478:487:int guessBottomKeyboardInset(android.view.WindowInsets) -> a
    832:837:void resetWillNotDraw(boolean,boolean) -> a
    846:846:android.view.PointerIcon getSystemPointerIcon(int) -> a
    862:943:void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> a
    1038:1079:void revertImageView(java.lang.Runnable) -> a
    1082:1085:void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView) -> a
    1088:1091:boolean acquireLatestImageViewFrame() -> a
    1118:1119:void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener) -> a
    1180:1181:void autofill(android.util.SparseArray) -> autofill
    77:77:io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView) -> b
    369:370:void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> b
    1014:1028:void convertToImageView() -> b
    1128:1129:void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener) -> b
    1005:1005:io.flutter.embedding.android.FlutterImageView createImageView() -> c
    718:718:boolean checkInputConnectionProxy(android.view.View) -> checkInputConnectionProxy
    956:1000:void detachFromFlutterEngine() -> d
    736:747:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    353:353:boolean hasRenderedFirstFrame() -> e
    1097:1097:boolean isAttachedToFlutterEngine() -> f
    646:679:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    1142:1157:void sendUserSettingsToFlutter() -> g
    819:825:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider() -> getAccessibilityNodeProvider
    1108:1108:io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine() -> getAttachedFlutterEngine
    441:462:io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides() -> h
    314:333:void init() -> i
    1160:1170:void sendViewportMetricsToFlutter() -> j
    510:633:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    382:395:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    701:705:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    784:786:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    802:811:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1174:1176:void onProvideAutofillVirtualStructure(android.view.ViewStructure,int) -> onProvideAutofillVirtualStructure
    408:422:void onSizeChanged(int,int,int,int) -> onSizeChanged
    759:772:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.flutter.embedding.android.FlutterView$1 -> io.flutter.embedding.android.m$a:
    io.flutter.embedding.android.FlutterView this$0 -> a
    113:113:void <init>(io.flutter.embedding.android.FlutterView) -> <init>
    117:118:void onAccessibilityChanged(boolean,boolean) -> a
io.flutter.embedding.android.FlutterView$2 -> io.flutter.embedding.android.m$b:
    io.flutter.embedding.android.FlutterView this$0 -> a
    122:122:void <init>(io.flutter.embedding.android.FlutterView) -> <init>
    125:130:void onFlutterUiDisplayed() -> a
    134:139:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.android.FlutterView$3 -> io.flutter.embedding.android.m$c:
    java.lang.Runnable val$onDone -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer -> a
    io.flutter.embedding.android.FlutterView this$0 -> c
    1066:1066:void <init>(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable) -> <init>
    1069:1072:void onFlutterUiDisplayed() -> a
    1077:1077:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener -> io.flutter.embedding.android.m$d:
    void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine) -> a
    void onFlutterEngineDetachedFromFlutterView() -> a
io.flutter.embedding.android.FlutterView$ZeroSides -> io.flutter.embedding.android.m$e:
    io.flutter.embedding.android.FlutterView$ZeroSides NONE -> a
    io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES -> e
    io.flutter.embedding.android.FlutterView$ZeroSides BOTH -> d
    io.flutter.embedding.android.FlutterView$ZeroSides RIGHT -> c
    io.flutter.embedding.android.FlutterView$ZeroSides LEFT -> b
    430:429:void <clinit>() -> <clinit>
    429:429:void <init>(java.lang.String,int) -> <init>
    429:429:io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String) -> valueOf
    429:429:io.flutter.embedding.android.FlutterView$ZeroSides[] values() -> values
io.flutter.embedding.android.MotionEventTracker -> io.flutter.embedding.android.n:
    java.util.PriorityQueue unusedEvents -> b
    android.util.LongSparseArray eventById -> a
    io.flutter.embedding.android.MotionEventTracker INSTANCE -> c
    45:48:void <init>() -> <init>
    39:42:io.flutter.embedding.android.MotionEventTracker getInstance() -> a
    52:55:io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent) -> a
    66:77:android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId) -> a
io.flutter.embedding.android.MotionEventTracker$MotionEventId -> io.flutter.embedding.android.n$a:
    java.util.concurrent.atomic.AtomicLong ID_COUNTER -> b
    long id -> a
    14:14:void <clinit>() -> <clinit>
    17:19:void <init>(long) -> <init>
    13:13:long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId) -> a
    22:22:io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long) -> a
    30:30:long getId() -> a
    26:26:io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique() -> b
io.flutter.embedding.android.RenderMode -> io.flutter.embedding.android.o:
    io.flutter.embedding.android.RenderMode texture -> b
    io.flutter.embedding.android.RenderMode image -> c
    io.flutter.embedding.android.RenderMode[] $VALUES -> d
    io.flutter.embedding.android.RenderMode surface -> a
    16:8:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:io.flutter.embedding.android.RenderMode valueOf(java.lang.String) -> valueOf
    8:8:io.flutter.embedding.android.RenderMode[] values() -> values
io.flutter.embedding.android.SplashScreen -> io.flutter.embedding.android.q:
    android.view.View createSplashView(android.content.Context,android.os.Bundle) -> a
    boolean doesSplashViewRememberItsTransition() -> a
    void transitionToFlutter(java.lang.Runnable) -> a
    android.os.Bundle saveSplashScreenState() -> b
io.flutter.embedding.android.SplashScreen$-CC -> io.flutter.embedding.android.p:
    76:76:boolean io.flutter.embedding.android.SplashScreen.doesSplashViewRememberItsTransition() -> a
    87:87:android.os.Bundle io.flutter.embedding.android.SplashScreen.saveSplashScreenState() -> b
io.flutter.embedding.android.SplashScreenProvider -> io.flutter.embedding.android.r:
io.flutter.embedding.android.TransparencyMode -> io.flutter.embedding.android.s:
    io.flutter.embedding.android.TransparencyMode[] $VALUES -> c
    io.flutter.embedding.android.TransparencyMode transparent -> b
    io.flutter.embedding.android.TransparencyMode opaque -> a
    28:17:void <clinit>() -> <clinit>
    17:17:void <init>(java.lang.String,int) -> <init>
    17:17:io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String) -> valueOf
    17:17:io.flutter.embedding.android.TransparencyMode[] values() -> values
io.flutter.embedding.engine.FlutterEngine -> io.flutter.embedding.engine.a:
    io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel -> m
    io.flutter.embedding.engine.dart.DartExecutor dartExecutor -> c
    io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel -> i
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> j
    java.util.Set engineLifecycleListeners -> s
    io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener -> t
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> f
    io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel -> h
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel -> g
    io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel -> l
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> q
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry -> d
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> k
    io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel -> o
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> e
    io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel -> p
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> b
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> n
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> r
    204:212:void <init>(android.content.Context,java.lang.String[],boolean,boolean) -> <init>
    278:345:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean) -> <init>
    76:76:java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine) -> a
    429:444:void destroy() -> a
    76:76:io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine) -> b
    490:490:io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel() -> b
    76:76:io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine) -> c
    596:596:io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface() -> c
    473:473:io.flutter.embedding.engine.dart.DartExecutor getDartExecutor() -> d
    496:496:io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel() -> e
    502:502:io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel() -> f
    582:582:io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin() -> g
    562:562:io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel() -> h
    514:514:io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel() -> i
    523:523:io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel() -> j
    591:591:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController() -> k
    576:576:io.flutter.embedding.engine.plugins.PluginRegistry getPlugins() -> l
    484:484:io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer() -> m
    535:535:io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel() -> n
    544:544:io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel() -> o
    556:556:io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel() -> p
    568:568:io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel() -> q
    348:353:void attachToJni() -> r
    359:359:boolean isAttachedToJni() -> s
    408:420:void registerPlugins() -> t
io.flutter.embedding.engine.FlutterEngine$1 -> io.flutter.embedding.engine.a$a:
    io.flutter.embedding.engine.FlutterEngine this$0 -> a
    107:107:void <init>(io.flutter.embedding.engine.FlutterEngine) -> <init>
    110:117:void onPreEngineRestart() -> a
    123:123:void onEngineWillDestroy() -> b
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> io.flutter.embedding.engine.a$b:
    void onPreEngineRestart() -> a
    void onEngineWillDestroy() -> b
io.flutter.embedding.engine.FlutterEngineCache -> io.flutter.embedding.engine.b:
    java.util.Map cachedEngines -> a
    io.flutter.embedding.engine.FlutterEngineCache instance -> b
    44:44:void <init>() -> <init>
    35:38:io.flutter.embedding.engine.FlutterEngineCache getInstance() -> a
    60:60:io.flutter.embedding.engine.FlutterEngine get(java.lang.String) -> a
    71:76:void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine) -> a
    83:84:void remove(java.lang.String) -> b
io.flutter.embedding.engine.FlutterEngineConnectionRegistry -> io.flutter.embedding.engine.c:
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding -> n
    io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity -> f
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding -> c
    java.util.Map contentProviderAwarePlugins -> o
    java.util.Map plugins -> a
    android.app.Activity activity -> e
    android.app.Service service -> j
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding -> k
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding -> q
    java.util.Map activityAwarePlugins -> d
    java.util.Map serviceAwarePlugins -> i
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    boolean isWaitingForActivityReattachment -> h
    java.util.Map broadcastReceiverAwarePlugins -> l
    android.content.ContentProvider contentProvider -> p
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding -> g
    android.content.BroadcastReceiver broadcastReceiver -> m
    101:111:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader) -> <init>
    127:192:void add(io.flutter.embedding.engine.plugins.FlutterPlugin) -> a
    203:203:boolean has(java.lang.Class) -> a
    269:272:void remove(java.util.Set) -> a
    327:341:void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle) -> a
    348:366:void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle) -> a
    410:418:boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    424:431:boolean onActivityResult(int,int,android.content.Intent) -> a
    437:445:void onNewIntent(android.content.Intent) -> a
    449:457:void onUserLeaveHint() -> a
    473:481:void onRestoreInstanceState(android.os.Bundle) -> a
    213:265:void remove(java.lang.Class) -> b
    386:396:void detachFromActivity() -> b
    461:469:void onSaveInstanceState(android.os.Bundle) -> b
    370:382:void detachFromActivityForConfigChanges() -> c
    114:123:void destroy() -> d
    565:577:void detachFromBroadcastReceiver() -> e
    606:618:void detachFromContentProvider() -> f
    507:519:void detachFromService() -> g
    278:280:void removeAll() -> h
    300:300:android.app.Activity attachedActivity() -> i
    400:405:void detachFromActivityInternal() -> j
    283:292:void detachFromAppComponent() -> k
    296:296:boolean isAttachedToActivity() -> l
    540:540:boolean isAttachedToBroadcastReceiver() -> m
    582:582:boolean isAttachedToContentProvider() -> n
    486:486:boolean isAttachedToService() -> o
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1 -> io.flutter.embedding.engine.c$a:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets -> io.flutter.embedding.engine.c$b:
    621:621:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1) -> <init>
    624:626:void <init>(io.flutter.embedding.engine.loader.FlutterLoader) -> <init>
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding -> io.flutter.embedding.engine.c$c:
    java.util.Set onNewIntentListeners -> c
    java.util.Set onUserLeaveHintListeners -> d
    java.util.Set onSaveInstanceStateListeners -> e
    java.util.Set onRequestPermissionsResultListeners -> a
    java.util.Set onActivityResultListeners -> b
    671:674:void <init>(android.app.Activity,androidx.lifecycle.Lifecycle) -> <init>
    708:715:boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    735:741:boolean onActivityResult(int,int,android.content.Intent) -> a
    762:765:void onNewIntent(android.content.Intent) -> a
    795:798:void onUserLeaveHint() -> a
    817:820:void onRestoreInstanceState(android.os.Bundle) -> a
    806:809:void onSaveInstanceState(android.os.Bundle) -> b
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding -> io.flutter.embedding.engine.c$d:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding -> io.flutter.embedding.engine.c$e:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding -> io.flutter.embedding.engine.c$f:
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
    120:225:void <clinit>() -> <clinit>
    285:289:void <init>() -> <init>
    929:931:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener) -> addEngineLifecycleListener
    399:401:void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> addIsDisplayingFlutterUiListener
    235:238:void asyncWaitForVsync(long) -> asyncWaitForVsync
    308:311:void attachToNative(boolean) -> attachToNative
    1021:1062:java.lang.String[] computePlatformResolvedLocale(java.lang.String[]) -> computePlatformResolvedLocale
    988:990:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface() -> createOverlaySurface
    1170:1172:void deferredComponentInstallFailure(int,java.lang.String,boolean) -> deferredComponentInstallFailure
    999:1001:void destroyOverlaySurfaces() -> destroyOverlaySurfaces
    368:372:void detachFromNativeAndReleaseResources() -> detachFromNativeAndReleaseResources
    841:852:void dispatchEmptyPlatformMessage(java.lang.String,int) -> dispatchEmptyPlatformMessage
    862:873:void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int) -> dispatchPlatformMessage
    570:573:void dispatchPointerDataPacket(java.nio.ByteBuffer,int) -> dispatchPointerDataPacket
    643:644:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action) -> dispatchSemanticsAction
    649:658:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object) -> dispatchSemanticsAction
    671:674:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int) -> dispatchSemanticsAction
    384:385:void ensureAttachedToNative() -> ensureAttachedToNative
    377:378:void ensureNotAttachedToNative() -> ensureNotAttachedToNative
    1227:1230:void ensureRunningOnMainThread() -> ensureRunningOnMainThread
    1202:1204:android.graphics.Bitmap getBitmap() -> getBitmap
    202:202:boolean getIsSoftwareRenderingEnabled() -> getIsSoftwareRenderingEnabled
    213:213:java.lang.String getObservatoryUri() -> getObservatoryUri
    817:822:void handlePlatformMessage(java.lang.String,byte[],int) -> handlePlatformMessage
    828:833:void handlePlatformMessageResponse(int,byte[]) -> handlePlatformMessageResponse
    159:166:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long) -> init
    886:895:void invokePlatformMessageEmptyResponseCallback(int) -> invokePlatformMessageEmptyResponseCallback
    905:915:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int) -> invokePlatformMessageResponseCallback
    297:297:boolean isAttached() -> isAttached
    1121:1124:void loadDartDeferredLibrary(int,java.lang.String[]) -> loadDartDeferredLibrary
    112:118:void loadLibrary() -> loadLibrary
    728:731:void markTextureFrameAvailable(long) -> markTextureFrameAvailable
    1219:1222:void notifyLowMemoryWarning() -> notifyLowMemoryWarning
    966:968:void onBeginFrame() -> onBeginFrame
    955:957:void onDisplayOverlaySurface(int,int,int,int,int) -> onDisplayOverlaySurface
    1190:1192:void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack) -> onDisplayPlatformView
    977:979:void onEndFrame() -> onEndFrame
    418:423:void onFirstFrame() -> onFirstFrame
    947:950:void onPreEngineRestart() -> onPreEngineRestart
    429:434:void onRenderingStopped() -> onRenderingStopped
    478:481:void onSurfaceChanged(int,int) -> onSurfaceChanged
    445:448:void onSurfaceCreated(android.view.Surface) -> onSurfaceCreated
    494:498:void onSurfaceDestroyed() -> onSurfaceDestroyed
    461:464:void onSurfaceWindowChanged(android.view.Surface) -> onSurfaceWindowChanged
    315:315:long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean) -> performNativeAttach
    130:136:void prefetchDefaultFontManager() -> prefetchDefaultFontManager
    711:714:void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper) -> registerTexture
    940:942:void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener) -> removeEngineLifecycleListener
    409:411:void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> removeIsDisplayingFlutterUiListener
    1093:1101:void requestDartDeferredLibrary(int) -> requestDartDeferredLibrary
    761:769:void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager) -> runBundleAndSnapshotFromLibrary
    598:600:void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate) -> setAccessibilityDelegate
    696:699:void setAccessibilityFeatures(int) -> setAccessibilityFeatures
    229:230:void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate) -> setAsyncWaitForVsyncDelegate
    1073:1078:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager) -> setDeferredComponentManager
    1013:1015:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin) -> setLocalizationPlugin
    807:809:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler) -> setPlatformMessageHandler
    581:583:void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController) -> setPlatformViewsController
    217:223:void setRefreshRateFPS(float) -> setRefreshRateFPS
    685:688:void setSemanticsEnabled(boolean) -> setSemanticsEnabled
    526:545:void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int) -> setViewportMetrics
    338:346:io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String) -> spawn
    740:743:void unregisterTexture(long) -> unregisterTexture
    633:639:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> updateCustomAccessibilityActions
    1142:1145:void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String) -> updateJavaAssetManager
    612:618:void updateSemantics(java.nio.ByteBuffer,java.lang.String[]) -> updateSemantics
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> io.flutter.embedding.engine.FlutterJNI$a:
    void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> a
    void updateSemantics(java.nio.ByteBuffer,java.lang.String[]) -> b
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> io.flutter.embedding.engine.FlutterJNI$b:
    void asyncWaitForVsync(long) -> a
io.flutter.embedding.engine.FlutterOverlaySurface -> io.flutter.embedding.engine.FlutterOverlaySurface:
    17:20:void <init>(int,android.view.Surface) -> <init>
    23:23:int getId() -> getId
    27:27:android.view.Surface getSurface() -> getSurface
io.flutter.embedding.engine.FlutterShellArgs -> io.flutter.embedding.engine.d:
    java.util.Set args -> a
    138:140:void <init>(java.util.List) -> <init>
    65:121:io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent) -> a
    173:174:java.lang.String[] toArray() -> a
io.flutter.embedding.engine.dart.DartExecutor -> io.flutter.embedding.engine.e.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener -> g
    java.lang.String isolateServiceId -> f
    io.flutter.embedding.engine.dart.DartMessenger dartMessenger -> c
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler -> h
    android.content.res.AssetManager assetManager -> b
    boolean isApplicationRunning -> e
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> d
    58:64:void <init>(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager) -> <init>
    36:36:java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor) -> a
    36:36:java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String) -> a
    116:130:void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint) -> a
    182:183:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
    191:192:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> a
    220:220:java.lang.String getIsolateServiceId() -> a
    36:36:io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor) -> b
    105:105:boolean isExecutingDart() -> b
    247:250:void notifyLowMemoryWarning() -> c
    79:83:void onAttachedToJNI() -> d
    93:97:void onDetachedFromJNI() -> e
io.flutter.embedding.engine.dart.DartExecutor$1 -> io.flutter.embedding.engine.e.a$a:
    io.flutter.embedding.engine.dart.DartExecutor this$0 -> a
    48:48:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    51:55:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint -> io.flutter.embedding.engine.e.a$b:
    java.lang.String pathToBundle -> a
    java.lang.String dartEntrypointFunctionName -> c
    java.lang.String dartEntrypointLibrary -> b
    282:286:void <init>(java.lang.String,java.lang.String) -> <init>
    309:310:boolean equals(java.lang.Object) -> equals
    320:322:int hashCode() -> hashCode
    300:300:java.lang.String toString() -> toString
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger -> io.flutter.embedding.engine.e.a$c:
    io.flutter.embedding.engine.dart.DartMessenger messenger -> a
    362:362:void <init>(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1) -> <init>
    365:367:void <init>(io.flutter.embedding.engine.dart.DartMessenger) -> <init>
    397:398:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
    412:413:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> a
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener -> io.flutter.embedding.engine.e.a$d:
    void onIsolateServiceIdAvailable(java.lang.String) -> a
io.flutter.embedding.engine.dart.DartMessenger -> io.flutter.embedding.engine.e.b:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.Map messageHandlers -> b
    java.util.Map pendingReplies -> c
    int nextReplyId -> d
    33:37:void <init>(io.flutter.embedding.engine.FlutterJNI) -> <init>
    42:49:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> a
    63:74:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
    79:96:void handleMessageFromDart(java.lang.String,byte[],int) -> a
    100:112:void handlePlatformMessageResponse(int,byte[]) -> a
    135:137:void handleError(java.lang.Error) -> a
io.flutter.embedding.engine.dart.DartMessenger$Reply -> io.flutter.embedding.engine.e.b$a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.concurrent.atomic.AtomicBoolean done -> c
    int replyId -> b
    147:150:void <init>(io.flutter.embedding.engine.FlutterJNI,int) -> <init>
    154:155:void reply(java.nio.ByteBuffer) -> a
io.flutter.embedding.engine.dart.PlatformMessageHandler -> io.flutter.embedding.engine.e.c:
    void handleMessageFromDart(java.lang.String,byte[],int) -> a
    void handlePlatformMessageResponse(int,byte[]) -> a
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> io.flutter.embedding.engine.f.a:
    void destroy() -> a
    java.lang.String getDeferredComponentInstallState(int,java.lang.String) -> a
    void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel) -> a
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
    void installDeferredComponent(int,java.lang.String) -> b
    boolean uninstallDeferredComponent(int,java.lang.String) -> c
io.flutter.embedding.engine.loader.ApplicationInfoLoader -> io.flutter.embedding.engine.g.a:
    java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME -> a
    java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY -> c
    java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY -> b
    java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY -> d
    21:27:void <clinit>() -> <clinit>
    34:38:android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context) -> a
    43:46:java.lang.String getString(android.os.Bundle,java.lang.String) -> a
    53:77:java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context) -> a
    106:109:void skipTag(android.content.res.XmlResourceParser) -> a
    116:119:void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean) -> a
    85:102:void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean) -> b
    139:146:io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context) -> b
io.flutter.embedding.engine.loader.FlutterApplicationInfo -> io.flutter.embedding.engine.g.b:
    boolean clearTextPermitted -> f
    java.lang.String vmSnapshotData -> a
    java.lang.String flutterAssetsDir -> c
    java.lang.String isolateSnapshotData -> b
    java.lang.String nativeLibraryDir -> e
    java.lang.String domainNetworkPolicy -> d
    29:40:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> <init>
io.flutter.embedding.engine.loader.FlutterLoader -> io.flutter.embedding.engine.g.c:
    io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo -> d
    long initStartTimestampMillis -> c
    boolean initialized -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> e
    java.util.concurrent.Future initResultFuture -> f
    io.flutter.embedding.engine.loader.FlutterLoader$Settings settings -> b
    72:73:void <init>() -> <init>
    81:83:void <init>(io.flutter.embedding.engine.FlutterJNI) -> <init>
    31:31:io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context) -> a
    31:31:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader) -> a
    111:112:void startInitialization(android.content.Context) -> a
    127:131:void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings) -> a
    187:191:void ensureInitializationComplete(android.content.Context,java.lang.String[]) -> a
    366:366:java.lang.String findAppBundlePath() -> a
    397:397:java.lang.String fullAssetPathFrom(java.lang.String) -> a
    343:361:io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context) -> b
io.flutter.embedding.engine.loader.FlutterLoader$1 -> io.flutter.embedding.engine.g.c$a:
    android.content.Context val$appContext -> a
    io.flutter.embedding.engine.loader.FlutterLoader this$0 -> b
    146:146:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context) -> <init>
    146:146:java.lang.Object call() -> call
    149:168:io.flutter.embedding.engine.loader.FlutterLoader$InitResult call() -> call
io.flutter.embedding.engine.loader.FlutterLoader$1$1 -> io.flutter.embedding.engine.g.c$a$a:
    io.flutter.embedding.engine.loader.FlutterLoader$1 this$1 -> a
    157:157:void <init>(io.flutter.embedding.engine.loader.FlutterLoader$1) -> <init>
    160:161:void run() -> run
io.flutter.embedding.engine.loader.FlutterLoader$InitResult -> io.flutter.embedding.engine.g.c$b:
    java.lang.String appStoragePath -> a
    java.lang.String dataDirPath -> c
    java.lang.String engineCachesPath -> b
    91:91:void <init>(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1) -> <init>
    96:100:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
io.flutter.embedding.engine.loader.FlutterLoader$Settings -> io.flutter.embedding.engine.g.c$c:
    java.lang.String logTag -> a
    400:400:void <init>() -> <init>
    405:405:java.lang.String getLogTag() -> a
io.flutter.embedding.engine.loader.ResourceExtractor -> io.flutter.embedding.engine.g.d:
    android.content.pm.PackageManager mPackageManager -> c
    android.content.res.AssetManager mAssetManager -> d
    io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask -> f
    java.lang.String mDataDirPath -> a
    java.util.HashSet mResources -> e
    java.lang.String mPackageName -> b
    29:29:void <clinit>() -> <clinit>
    134:140:void <init>(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager) -> <init>
    26:26:java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String) -> a
    26:26:void access$100(java.lang.String,java.util.HashSet) -> a
    26:26:void access$200(java.io.InputStream,java.io.OutputStream) -> a
    34:37:long getVersionCode(android.content.pm.PackageInfo) -> a
    143:144:io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String) -> a
    153:160:io.flutter.embedding.engine.loader.ResourceExtractor start() -> a
    176:176:java.lang.String[] getExistingTimestamps(java.io.File) -> a
    164:173:void waitForCompletion() -> b
    186:200:void deleteFiles(java.lang.String,java.util.HashSet) -> b
    206:211:java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String) -> b
    247:251:void copy(java.io.InputStream,java.io.OutputStream) -> b
    255:260:java.lang.String[] getSupportedAbis() -> c
io.flutter.embedding.engine.loader.ResourceExtractor$1 -> io.flutter.embedding.engine.g.d$a:
    177:177:void <init>() -> <init>
    180:180:boolean accept(java.io.File,java.lang.String) -> accept
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask -> io.flutter.embedding.engine.g.d$b:
    java.util.HashSet mResources -> b
    android.content.res.AssetManager mAssetManager -> c
    java.lang.String mDataDirPath -> a
    android.content.pm.PackageManager mPackageManager -> e
    java.lang.String mPackageName -> d
    53:59:void <init>(java.lang.String,java.util.HashSet,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager) -> <init>
    63:84:java.lang.Void doInBackground(java.lang.Void[]) -> a
    91:119:boolean extractAPK(java.io.File) -> a
    41:41:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView -> io.flutter.embedding.engine.mutatorsstack.a:
    int prevTop -> f
    float screenDensity -> b
    int top -> d
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack -> a
    int prevLeft -> e
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> g
    int left -> c
    35:38:void <init>(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor) -> <init>
    52:60:void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int) -> a
    84:89:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    65:79:void draw(android.graphics.Canvas) -> draw
    92:111:android.graphics.Matrix getPlatformViewMatrix() -> getPlatformViewMatrix
    117:117:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    123:147:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack:
    140:144:void <init>() -> <init>
    208:208:java.util.List getFinalClippingPaths() -> getFinalClippingPaths
    216:216:android.graphics.Matrix getFinalMatrix() -> getFinalMatrix
    195:195:java.util.List getMutators() -> getMutators
    182:189:void pushClipRRect(int,int,int,int,float[]) -> pushClipRRect
    162:169:void pushClipRect(int,int,int,int) -> pushClipRect
    153:158:void pushTransform(float[]) -> pushTransform
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$a:
    android.graphics.Matrix matrix -> a
    59:62:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect) -> <init>
    71:75:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]) -> <init>
    92:95:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix) -> <init>
    130:130:android.graphics.Matrix getMatrix() -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$b:
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES -> f
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM -> d
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY -> e
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT -> a
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT -> b
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH -> c
    31:30:void <clinit>() -> <clinit>
    30:30:void <init>(java.lang.String,int) -> <init>
    30:30:io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String) -> valueOf
    30:30:io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values() -> values
io.flutter.embedding.engine.plugins.FlutterPlugin -> io.flutter.embedding.engine.h.a:
    void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> a
    void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> b
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets -> io.flutter.embedding.engine.h.a$a:
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding -> io.flutter.embedding.engine.h.a$b:
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> b
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> a
    110:117:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets) -> <init>
    136:136:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger() -> a
    131:131:io.flutter.embedding.engine.FlutterEngine getFlutterEngine() -> b
io.flutter.embedding.engine.plugins.PluginRegistry -> io.flutter.embedding.engine.h.b:
    void add(io.flutter.embedding.engine.plugins.FlutterPlugin) -> a
io.flutter.embedding.engine.plugins.activity.ActivityAware -> io.flutter.embedding.engine.h.c.a:
    void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> a
    void onDetachedFromActivity() -> a
    void onDetachedFromActivityForConfigChanges() -> b
    void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> b
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface -> io.flutter.embedding.engine.h.c.b:
    void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle) -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    void onNewIntent(android.content.Intent) -> a
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    void onRestoreInstanceState(android.os.Bundle) -> a
    void onUserLeaveHint() -> a
    void detachFromActivity() -> b
    void onSaveInstanceState(android.os.Bundle) -> b
    void detachFromActivityForConfigChanges() -> c
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding -> io.flutter.embedding.engine.h.c.c:
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener -> io.flutter.embedding.engine.h.c.c$a:
    void onRestoreInstanceState(android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> b
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware -> io.flutter.embedding.engine.h.d.a:
    void onAttachedToBroadcastReceiver(io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding) -> a
    void onDetachedFromBroadcastReceiver() -> a
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface -> io.flutter.embedding.engine.h.d.b:
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding -> io.flutter.embedding.engine.h.d.c:
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware -> io.flutter.embedding.engine.h.e.a:
    void onAttachedToContentProvider(io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding) -> a
    void onDetachedFromContentProvider() -> a
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface -> io.flutter.embedding.engine.h.e.b:
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding -> io.flutter.embedding.engine.h.e.c:
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference -> io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference:
    24:26:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    30:30:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
io.flutter.embedding.engine.plugins.service.ServiceAware -> io.flutter.embedding.engine.h.f.a:
    void onAttachedToService(io.flutter.embedding.engine.plugins.service.ServicePluginBinding) -> a
    void onDetachedFromService() -> a
io.flutter.embedding.engine.plugins.service.ServiceControlSurface -> io.flutter.embedding.engine.h.f.b:
io.flutter.embedding.engine.plugins.service.ServicePluginBinding -> io.flutter.embedding.engine.h.f.c:
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister -> io.flutter.embedding.engine.h.g.a:
    30:42:void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine) -> a
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.concurrent.atomic.AtomicLong nextTextureId -> b
    android.view.Surface surface -> c
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> e
    boolean isDisplayingFlutterUi -> d
    57:60:void <init>(io.flutter.embedding.engine.FlutterJNI) -> <init>
    35:35:boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean) -> a
    35:35:io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    35:35:void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long) -> a
    75:80:void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> a
    96:103:io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture() -> a
    182:189:void startRenderingToSurface(android.view.Surface) -> a
    212:213:void surfaceChanged(int,int) -> a
    241:292:void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics) -> a
    302:303:void dispatchPointerDataPacket(java.nio.ByteBuffer,int) -> a
    307:308:void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper) -> a
    312:313:void markTextureFrameAvailable(long) -> a
    332:333:void setSemanticsEnabled(boolean) -> a
    35:35:void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long) -> b
    67:67:boolean isDisplayingFlutterUi() -> b
    87:88:void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener) -> b
    199:201:void swapSurface(android.view.Surface) -> b
    317:318:void unregisterTexture(long) -> b
    322:322:boolean isSoftwareRenderingEnabled() -> c
    224:237:void stopRenderingToSurface() -> d
io.flutter.embedding.engine.renderer.FlutterRenderer$1 -> io.flutter.embedding.engine.renderer.a$a:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    45:45:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer) -> <init>
    48:49:void onFlutterUiDisplayed() -> a
    53:54:void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry -> io.flutter.embedding.engine.renderer.a$b:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> e
    io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper -> b
    android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener -> d
    long id -> a
    boolean released -> c
    111:128:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture) -> <init>
    106:106:boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry) -> a
    163:170:void release() -> a
    106:106:long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry) -> b
    158:158:long id() -> b
    153:153:android.graphics.SurfaceTexture surfaceTexture() -> c
    147:147:io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper() -> d
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1 -> io.flutter.embedding.engine.renderer.a$b$a:
    io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1 -> a
    131:131:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry) -> <init>
    134:139:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics -> io.flutter.embedding.engine.renderer.a$c:
    int systemGestureInsetBottom -> n
    int systemGestureInsetLeft -> o
    int systemGestureInsetTop -> l
    int systemGestureInsetRight -> m
    int viewInsetBottom -> j
    int viewInsetLeft -> k
    int viewInsetTop -> h
    int viewInsetRight -> i
    int viewPaddingBottom -> f
    int viewPaddingLeft -> g
    int viewPaddingTop -> d
    float devicePixelRatio -> a
    int viewPaddingRight -> e
    int width -> b
    int height -> c
    347:362:void <init>() -> <init>
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.b:
    void onFlutterUiDisplayed() -> a
    void onFlutterUiNoLongerDisplayed() -> b
io.flutter.embedding.engine.renderer.RenderSurface -> io.flutter.embedding.engine.renderer.c:
    void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    void pause() -> a
    void detachFromRenderer() -> b
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
    23:26:void <init>(android.graphics.SurfaceTexture) -> <init>
    55:56:void attachToGLContext(int) -> attachToGLContext
    61:62:void detachFromGLContext() -> detachFromGLContext
    67:68:void getTransformMatrix(float[]) -> getTransformMatrix
    44:49:void release() -> release
    30:30:android.graphics.SurfaceTexture surfaceTexture() -> surfaceTexture
    36:40:void updateTexImage() -> updateTexImage
io.flutter.embedding.engine.systemchannels.-$$Lambda$KeyEventChannel$ks_N3mtKlEyd7XxJih2Mvfzln-Y -> io.flutter.embedding.engine.i.a:
    android.view.KeyEvent f$1 -> b
    io.flutter.embedding.engine.systemchannels.KeyEventChannel f$0 -> a
    void reply(java.lang.Object) -> a
io.flutter.embedding.engine.systemchannels.AccessibilityChannel -> io.flutter.embedding.engine.i.b:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler -> c
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler -> d
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    88:94:void <init>(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI) -> <init>
    19:19:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel) -> a
    113:114:void onAndroidAccessibilityDisabled() -> a
    121:122:void setAccessibilityFeatures(int) -> a
    138:139:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action) -> a
    147:148:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object) -> a
    155:157:void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler) -> a
    103:104:void onAndroidAccessibilityEnabled() -> b
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1 -> io.flutter.embedding.engine.i.b$a:
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0 -> a
    27:27:void <init>(io.flutter.embedding.engine.systemchannels.AccessibilityChannel) -> <init>
    33:77:void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler -> io.flutter.embedding.engine.i.b$b:
    void onLongPress(int) -> a
    void onTooltip(java.lang.String) -> a
    void announce(java.lang.String) -> b
    void onTap(int) -> b
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel -> io.flutter.embedding.engine.i.c:
    java.util.Map moduleNameToResults -> c
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> d
    io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager -> b
    io.flutter.plugin.common.MethodChannel channel -> a
    84:90:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    28:28:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel) -> a
    100:101:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager) -> a
    28:28:java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel) -> b
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1 -> io.flutter.embedding.engine.i.c$a:
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0 -> a
    40:40:void <init>(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel) -> <init>
    43:73:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.embedding.engine.systemchannels.KeyEventChannel -> io.flutter.embedding.engine.i.d:
    io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler eventResponseHandler -> a
    io.flutter.plugin.common.BasicMessageChannel channel -> b
    64:67:void <init>(io.flutter.plugin.common.BinaryMessenger) -> <init>
    35:36:void setEventResponseHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler) -> a
    75:75:io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(android.view.KeyEvent) -> a
    76:96:void lambda$createReplyHandler$0(android.view.KeyEvent,java.lang.Object) -> a
    111:117:void keyDown(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent) -> a
    121:144:void encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,java.util.Map) -> a
    102:108:void keyUp(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent) -> b
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler -> io.flutter.embedding.engine.i.d$a:
    void onKeyEventNotHandled(android.view.KeyEvent) -> a
    void onKeyEventHandled(android.view.KeyEvent) -> b
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent -> io.flutter.embedding.engine.i.d$b:
    android.view.KeyEvent event -> a
    java.lang.Character complexCharacter -> b
    165:168:void <init>(android.view.KeyEvent,java.lang.Character) -> <init>
io.flutter.embedding.engine.systemchannels.LifecycleChannel -> io.flutter.embedding.engine.i.e:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    19:22:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    40:42:void appIsDetached() -> a
    25:27:void appIsInactive() -> b
    35:37:void appIsPaused() -> c
    30:32:void appIsResumed() -> d
io.flutter.embedding.engine.systemchannels.LocalizationChannel -> io.flutter.embedding.engine.i.f:
    io.flutter.plugin.common.MethodChannel channel -> a
    23:26:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    30:50:void sendLocales(java.util.List) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel -> io.flutter.embedding.engine.i.g:
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    io.flutter.plugin.common.MethodChannel channel -> a
    24:27:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    18:18:io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel) -> a
    34:35:void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1 -> io.flutter.embedding.engine.i.g$a:
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0 -> a
    39:39:void <init>(io.flutter.embedding.engine.systemchannels.MouseCursorChannel) -> <init>
    42:70:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler -> io.flutter.embedding.engine.i.g$b:
    void activateSystemCursor(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.NavigationChannel -> io.flutter.embedding.engine.i.h:
    io.flutter.plugin.common.MethodChannel channel -> a
    20:22:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    30:32:void pushRoute(java.lang.String) -> a
    35:37:void popRoute() -> a
    25:27:void setInitialRoute(java.lang.String) -> b
io.flutter.embedding.engine.systemchannels.PlatformChannel -> io.flutter.embedding.engine.i.i:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler -> b
    io.flutter.plugin.common.MethodChannel channel -> a
    184:187:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    26:26:io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel) -> a
    26:26:int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray) -> a
    26:26:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject) -> a
    194:195:void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler) -> a
    208:276:int decodeOrientations(org.json.JSONArray) -> a
    282:287:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject) -> a
    26:26:java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray) -> b
    26:26:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject) -> b
    300:313:java.util.List decodeSystemUiOverlays(org.json.JSONArray) -> b
    325:356:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject) -> b
io.flutter.embedding.engine.systemchannels.PlatformChannel$1 -> io.flutter.embedding.engine.i.i$a:
    io.flutter.embedding.engine.systemchannels.PlatformChannel this$0 -> a
    34:34:void <init>(io.flutter.embedding.engine.systemchannels.PlatformChannel) -> <init>
    37:173:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.embedding.engine.systemchannels.PlatformChannel$2 -> io.flutter.embedding.engine.i.i$b:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation -> a
    304:214:void <clinit>() -> <clinit>
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription -> io.flutter.embedding.engine.i.i$c:
    java.lang.String label -> b
    int color -> a
    554:557:void <init>(int,java.lang.String) -> <init>
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness -> io.flutter.embedding.engine.i.i$d:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT -> b
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK -> c
    586:585:void <clinit>() -> <clinit>
    601:603:void <init>(java.lang.String,int,java.lang.String) -> <init>
    591:596:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String) -> a
    585:585:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String) -> valueOf
    585:585:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat -> io.flutter.embedding.engine.i.i$e:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES -> c
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT -> b
    608:607:void <clinit>() -> <clinit>
    623:625:void <init>(java.lang.String,int,java.lang.String) -> <init>
    613:618:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String) -> a
    607:607:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String) -> valueOf
    607:607:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation -> io.flutter.embedding.engine.i.i$f:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP -> b
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES -> f
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN -> c
    495:494:void <clinit>() -> <clinit>
    512:514:void <init>(java.lang.String,int,java.lang.String) -> <init>
    502:507:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String) -> a
    494:494:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String) -> valueOf
    494:494:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType -> io.flutter.embedding.engine.i.i$g:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT -> c
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD -> b
    469:468:void <clinit>() -> <clinit>
    488:490:void <init>(java.lang.String,int,java.lang.String) -> <init>
    477:483:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String) -> a
    468:468:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String) -> valueOf
    468:468:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler -> io.flutter.embedding.engine.i.i$h:
    java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> a
    void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> a
    void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> a
    void setClipboardData(java.lang.String) -> a
    void setPreferredOrientations(int) -> a
    void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> a
    void showSystemOverlays(java.util.List) -> a
    void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> a
    void popSystemNavigator() -> u
    void restoreSystemUiOverlays() -> v
    boolean clipboardHasStrings() -> w
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType -> io.flutter.embedding.engine.i.i$i:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK -> b
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT -> c
    java.lang.String encodedName -> a
    447:446:void <clinit>() -> <clinit>
    462:464:void <init>(java.lang.String,int,java.lang.String) -> <init>
    452:457:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String) -> a
    446:446:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String) -> valueOf
    446:446:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle -> io.flutter.embedding.engine.i.i$j:
    java.lang.Integer systemNavigationBarColor -> c
    java.lang.Integer systemNavigationBarDividerColor -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness -> b
    java.lang.Integer statusBarColor -> a
    576:582:void <init>(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer) -> <init>
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay -> io.flutter.embedding.engine.i.i$k:
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS -> b
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES -> d
    java.lang.String encodedName -> a
    525:524:void <clinit>() -> <clinit>
    540:542:void <init>(java.lang.String,int,java.lang.String) -> <init>
    530:535:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String) -> a
    524:524:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String) -> valueOf
    524:524:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values() -> values
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel -> io.flutter.embedding.engine.i.j:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler -> c
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler -> b
    io.flutter.plugin.common.MethodChannel channel -> a
    212:216:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    26:26:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel) -> a
    26:26:java.lang.String access$100(java.lang.Exception) -> a
    33:37:void invokeViewFocused(int) -> a
    223:224:void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler) -> a
    40:43:java.lang.String detailedExceptionString(java.lang.Exception) -> b
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 -> io.flutter.embedding.engine.i.j$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0 -> a
    47:47:void <init>(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel) -> <init>
    52:79:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
    194:201:void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> b
    82:110:void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> c
    113:128:void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> d
    131:149:void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> e
    181:191:void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> f
    152:178:void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> g
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1 -> io.flutter.embedding.engine.i.j$a$a:
    io.flutter.plugin.common.MethodChannel$Result val$result -> a
    140:140:void <init>(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result) -> <init>
    143:144:void run() -> run
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest -> io.flutter.embedding.engine.i.j$b:
    java.nio.ByteBuffer params -> f
    double logicalWidth -> c
    double logicalHeight -> d
    int direction -> e
    java.lang.String viewType -> b
    int viewId -> a
    319:326:void <init>(int,java.lang.String,double,double,int,java.nio.ByteBuffer) -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest -> io.flutter.embedding.engine.i.j$c:
    double newLogicalWidth -> b
    double newLogicalHeight -> c
    int viewId -> a
    344:348:void <init>(int,double,double) -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch -> io.flutter.embedding.engine.i.j$d:
    int source -> n
    float yPrecision -> k
    int flags -> o
    float xPrecision -> j
    int deviceId -> l
    int edgeFlags -> m
    java.lang.Object rawPointerPropertiesList -> f
    java.lang.Object rawPointerCoords -> g
    int metaState -> h
    int buttonState -> i
    int action -> d
    int pointerCount -> e
    int viewId -> a
    java.lang.Number downTime -> b
    java.lang.Number eventTime -> c
    long motionEventId -> p
    403:420:void <init>(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long) -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler -> io.flutter.embedding.engine.i.j$e:
    void clearFocus(int) -> a
    long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> a
    void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch) -> a
    void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable) -> a
    void setDirection(int,int) -> a
    void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> b
    void disposeAndroidViewForPlatformView(int) -> b
    void disposeVirtualDisplayForPlatformView(int) -> c
io.flutter.embedding.engine.systemchannels.RestorationChannel -> io.flutter.embedding.engine.i.k:
    byte[] restorationData -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> g
    boolean engineHasProvidedData -> e
    boolean frameworkHasRequestedData -> f
    boolean waitForRestorationData -> a
    io.flutter.plugin.common.MethodChannel channel -> c
    io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest -> d
    38:41:void <init>(io.flutter.embedding.engine.dart.DartExecutor,boolean) -> <init>
    43:48:void <init>(io.flutter.plugin.common.MethodChannel,boolean) -> <init>
    33:33:byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel) -> a
    33:33:byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]) -> a
    33:33:boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean) -> a
    33:33:io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result) -> a
    81:121:void setRestorationData(byte[]) -> a
    130:131:void clearData() -> a
    33:33:boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel) -> b
    33:33:java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]) -> b
    76:76:byte[] getRestorationData() -> b
    164:167:java.util.Map packageData(byte[]) -> b
io.flutter.embedding.engine.systemchannels.RestorationChannel$1 -> io.flutter.embedding.engine.i.k$a:
    byte[] val$data -> a
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> b
    96:96:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]) -> <init>
    99:100:void success(java.lang.Object) -> a
    104:110:void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    115:115:void notImplemented() -> a
io.flutter.embedding.engine.systemchannels.RestorationChannel$2 -> io.flutter.embedding.engine.i.k$b:
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> a
    134:134:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel) -> <init>
    137:160:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel -> io.flutter.embedding.engine.i.l:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    21:23:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    27:27:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage() -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder -> io.flutter.embedding.engine.i.l$a:
    java.util.Map message -> b
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    34:36:void <init>(io.flutter.plugin.common.BasicMessageChannel) -> <init>
    40:41:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float) -> a
    46:47:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean) -> a
    52:53:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness) -> a
    57:69:void send() -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness -> io.flutter.embedding.engine.i.l$b:
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark -> c
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES -> d
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light -> b
    java.lang.String name -> a
    79:78:void <clinit>() -> <clinit>
    84:86:void <init>(java.lang.String,int,java.lang.String) -> <init>
    78:78:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String) -> valueOf
    78:78:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values() -> values
io.flutter.embedding.engine.systemchannels.SystemChannel -> io.flutter.embedding.engine.i.m:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    21:24:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    27:31:void sendMemoryPressureWarning() -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel -> io.flutter.embedding.engine.i.n:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler -> b
    io.flutter.plugin.common.MethodChannel channel -> a
    152:155:void <init>(io.flutter.embedding.engine.dart.DartExecutor) -> <init>
    38:38:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel) -> a
    164:165:void requestExistingInputState() -> a
    169:175:java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int) -> a
    187:209:void updateEditingState(int,java.lang.String,int,int,int,int) -> a
    213:228:void updateEditingStateWithTag(int,java.util.HashMap) -> a
    260:263:void done(int) -> a
    288:317:void performPrivateCommand(int,java.lang.String,android.os.Bundle) -> a
    324:325:void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler) -> a
    239:242:void go(int) -> b
    232:235:void newline(int) -> c
    267:270:void next(int) -> d
    274:277:void previous(int) -> e
    246:249:void search(int) -> f
    253:256:void send(int) -> g
    281:285:void unspecifiedAction(int) -> h
io.flutter.embedding.engine.systemchannels.TextInputChannel$1 -> io.flutter.embedding.engine.i.n$a:
    io.flutter.embedding.engine.systemchannels.TextInputChannel this$0 -> a
    45:45:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel) -> <init>
    48:141:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration -> io.flutter.embedding.engine.i.n$b:
    java.lang.String actionLabel -> g
    java.lang.Integer inputAction -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill -> h
    boolean obscureText -> a
    boolean autocorrect -> b
    boolean enableSuggestions -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization -> d
    580:590:void <init>(boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[]) -> <init>
    398:400:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject) -> a
    425:427:java.lang.Integer inputActionFromTextInputAction(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill -> io.flutter.embedding.engine.i.n$b$a:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState -> c
    java.lang.String uniqueIdentifier -> a
    java.lang.String[] hints -> b
    554:558:void <init>(java.lang.String,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> <init>
    453:461:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject) -> a
    470:475:java.lang.String translateAutofillHint(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType -> io.flutter.embedding.engine.i.n$c:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type -> a
    boolean isSigned -> b
    boolean isDecimal -> c
    613:617:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean) -> <init>
    603:603:io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject) -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization -> io.flutter.embedding.engine.i.n$d:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES -> f
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES -> d
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE -> e
    651:650:void <clinit>() -> <clinit>
    667:669:void <init>(java.lang.String,int,java.lang.String) -> <init>
    657:662:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String) -> a
    650:650:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String) -> valueOf
    650:650:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values() -> values
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState -> io.flutter.embedding.engine.i.n$e:
    java.lang.String text -> a
    int composingStart -> d
    int composingEnd -> e
    int selectionStart -> b
    int selectionEnd -> c
    695:703:void <init>(java.lang.String,int,int,int,int) -> <init>
    675:675:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject) -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler -> io.flutter.embedding.engine.i.n$f:
    void finishAutofillContext(boolean) -> a
    void requestAutofill() -> a
    void sendAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> a
    void setEditableSizeAndTransform(double,double,double[]) -> a
    void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> a
    void setPlatformViewClient(int) -> a
    void clearClient() -> b
    void show() -> c
    void hide() -> d
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType -> io.flutter.embedding.engine.i.n$g:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME -> d
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL -> j
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES -> l
    java.lang.String encodedName -> a
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE -> h
    622:621:void <clinit>() -> <clinit>
    644:646:void <init>(java.lang.String,int,java.lang.String) -> <init>
    634:639:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String) -> a
    621:621:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String) -> valueOf
    621:621:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values() -> values
io.flutter.plugin.common.BasicMessageChannel -> b.a.c.a.a:
    io.flutter.plugin.common.MessageCodec codec -> c
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    49:64:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec) -> <init>
    32:32:io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel) -> a
    72:73:void send(java.lang.Object) -> a
    85:89:void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
    104:105:void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler) -> a
    32:32:java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel) -> b
io.flutter.plugin.common.BasicMessageChannel$1 -> b.a.c.a.a$a:
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler -> b.a.c.a.a$b:
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    177:177:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1) -> <init>
    180:182:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler) -> <init>
    187:199:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1 -> b.a.c.a.a$b$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback -> a
    io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1 -> b
    189:189:void <init>(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> <init>
    192:193:void reply(java.lang.Object) -> a
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler -> b.a.c.a.a$c:
    io.flutter.plugin.common.BasicMessageChannel$Reply callback -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    160:160:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1) -> <init>
    163:165:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply) -> <init>
    170:174:void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.BasicMessageChannel$MessageHandler -> b.a.c.a.a$d:
    void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
io.flutter.plugin.common.BasicMessageChannel$Reply -> b.a.c.a.a$e:
    void reply(java.lang.Object) -> a
io.flutter.plugin.common.BinaryMessenger -> b.a.c.a.b:
    void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
    void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> a
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler -> b.a.c.a.b$a:
    void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
io.flutter.plugin.common.BinaryMessenger$BinaryReply -> b.a.c.a.b$b:
    void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.FlutterException -> b.a.c.a.c:
    java.lang.Object details -> b
    java.lang.String code -> a
    18:24:void <init>(java.lang.String,java.lang.String,java.lang.Object) -> <init>
io.flutter.plugin.common.JSONMessageCodec -> b.a.c.a.d:
    io.flutter.plugin.common.JSONMessageCodec INSTANCE -> a
    26:26:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    32:39:java.nio.ByteBuffer encodeMessage(java.lang.Object) -> a
    45:57:java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.JSONMethodCodec -> b.a.c.a.e:
    io.flutter.plugin.common.JSONMethodCodec INSTANCE -> a
    24:24:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    31:36:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
    43:54:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> a
    60:60:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> a
    66:66:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> a
    76:76:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> a
    87:104:java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> b
    109:109:java.lang.Object unwrapNull(java.lang.Object) -> b
io.flutter.plugin.common.JSONUtil -> b.a.c.a.f:
    61:65:java.lang.Object wrap(java.lang.Object) -> a
io.flutter.plugin.common.MessageCodec -> b.a.c.a.g:
    java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer encodeMessage(java.lang.Object) -> a
io.flutter.plugin.common.MethodCall -> b.a.c.a.h:
    java.lang.Object arguments -> b
    java.lang.String method -> a
    32:34:void <init>(java.lang.String,java.lang.Object) -> <init>
    48:48:java.lang.Object arguments() -> a
io.flutter.plugin.common.MethodChannel -> b.a.c.a.i:
    io.flutter.plugin.common.MethodCodec codec -> c
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    47:48:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String) -> <init>
    58:73:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec) -> <init>
    32:32:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel) -> a
    83:84:void invokeMethod(java.lang.String,java.lang.Object) -> a
    97:101:void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result) -> a
    119:121:void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler) -> a
    32:32:java.lang.String access$100(io.flutter.plugin.common.MethodChannel) -> b
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler -> b.a.c.a.i$a:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    224:226:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler) -> <init>
    231:257:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
    260:262:java.lang.String getStackTrace(java.lang.Exception) -> a
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1 -> b.a.c.a.i$a$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply -> a
    io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1 -> b
    235:235:void <init>(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> <init>
    238:239:void success(java.lang.Object) -> a
    243:244:void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    248:249:void notImplemented() -> a
io.flutter.plugin.common.MethodChannel$IncomingResultHandler -> b.a.c.a.i$b:
    io.flutter.plugin.common.MethodChannel$Result callback -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    198:200:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result) -> <init>
    206:218:void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.MethodChannel$MethodCallHandler -> b.a.c.a.i$c:
    void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.plugin.common.MethodChannel$Result -> b.a.c.a.i$d:
    void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    void notImplemented() -> a
    void success(java.lang.Object) -> a
io.flutter.plugin.common.MethodCodec -> b.a.c.a.j:
    io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> a
    java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> a
    java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
    java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> a
    java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> b
io.flutter.plugin.common.PluginRegistry$ActivityResultListener -> b.a.c.a.k:
    boolean onActivityResult(int,int,android.content.Intent) -> a
io.flutter.plugin.common.PluginRegistry$NewIntentListener -> b.a.c.a.l:
    boolean onNewIntent(android.content.Intent) -> a
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener -> b.a.c.a.m:
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener -> b.a.c.a.n:
    void onUserLeaveHint() -> a
io.flutter.plugin.common.StandardMessageCodec -> b.a.c.a.o:
    java.nio.charset.Charset UTF8 -> c
    io.flutter.plugin.common.StandardMessageCodec INSTANCE -> a
    boolean LITTLE_ENDIAN -> b
    64:92:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    68:75:java.nio.ByteBuffer encodeMessage(java.lang.Object) -> a
    80:86:java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    155:174:void writeLong(java.io.ByteArrayOutputStream,long) -> a
    178:179:void writeDouble(java.io.ByteArrayOutputStream,double) -> a
    183:185:void writeBytes(java.io.ByteArrayOutputStream,byte[]) -> a
    193:199:void writeAlignment(java.io.ByteArrayOutputStream,int) -> a
    209:278:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object) -> a
    305:309:void readAlignment(java.nio.ByteBuffer,int) -> a
    328:418:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer) -> a
    129:136:void writeChar(java.io.ByteArrayOutputStream,int) -> b
    313:314:java.lang.Object readValue(java.nio.ByteBuffer) -> b
    140:151:void writeInt(java.io.ByteArrayOutputStream,int) -> c
    297:300:byte[] readBytes(java.nio.ByteBuffer) -> c
    113:125:void writeSize(java.io.ByteArrayOutputStream,int) -> d
    282:283:int readSize(java.nio.ByteBuffer) -> d
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> b.a.c.a.o$a:
    421:421:void <init>() -> <init>
    423:423:byte[] buffer() -> a
io.flutter.plugin.common.StandardMethodCodec -> b.a.c.a.p:
    io.flutter.plugin.common.StandardMessageCodec messageCodec -> a
    io.flutter.plugin.common.StandardMethodCodec INSTANCE -> b
    25:25:void <clinit>() -> <clinit>
    30:32:void <init>(io.flutter.plugin.common.StandardMessageCodec) -> <init>
    36:41:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
    46:52:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> a
    57:62:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> a
    68:79:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> a
    85:97:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> a
    129:131:java.lang.String getStackTrace(java.lang.Throwable) -> a
    102:125:java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> b
io.flutter.plugin.common.StringCodec -> b.a.c.a.q:
    java.nio.charset.Charset UTF8 -> a
    io.flutter.plugin.common.StringCodec INSTANCE -> b
    18:19:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    17:17:java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    17:17:java.nio.ByteBuffer encodeMessage(java.lang.Object) -> a
    25:32:java.nio.ByteBuffer encodeMessage(java.lang.String) -> a
    37:52:java.lang.String decodeMessage(java.nio.ByteBuffer) -> a
io.flutter.plugin.editing.FlutterTextUtils -> io.flutter.plugin.editing.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    17:19:void <init>(io.flutter.embedding.engine.FlutterJNI) -> <init>
    22:22:boolean isEmoji(int) -> a
    198:317:int getOffsetAfter(java.lang.CharSequence,int) -> a
    26:26:boolean isEmojiModifier(int) -> b
    58:187:int getOffsetBefore(java.lang.CharSequence,int) -> b
    30:30:boolean isEmojiModifierBase(int) -> c
    46:46:boolean isKeycapBase(int) -> d
    38:38:boolean isRegionalIndicatorSymbol(int) -> e
    42:42:boolean isTagSpecChar(int) -> f
    34:34:boolean isVariationSelector(int) -> g
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback:
    71:77:void <init>(android.view.View,int,int) -> <init>
    49:49:int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$100
    49:49:boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$200
    49:49:boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean) -> access$202
    49:49:boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$300
    49:49:boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean) -> access$302
    49:49:android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$400
    49:49:android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets) -> access$402
    49:49:int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$500
    49:49:android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> access$600
    49:49:android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View) -> access$602
    98:98:android.view.WindowInsetsAnimation$Callback getAnimationCallback() -> getAnimationCallback
    93:93:android.view.View$OnApplyWindowInsetsListener getInsetsListener() -> getInsetsListener
    81:83:void install() -> install
    87:89:void remove() -> remove
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1 -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$a:
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback:
    106:108:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> <init>
    162:175:void onEnd(android.view.WindowInsetsAnimation) -> onEnd
    112:116:void onPrepare(android.view.WindowInsetsAnimation) -> onPrepare
    121:122:android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List) -> onProgress
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$b:
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    178:178:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback) -> <init>
    178:178:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1) -> <init>
    181:199:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
io.flutter.plugin.editing.InputConnectionAdaptor -> io.flutter.plugin.editing.b:
    android.view.inputmethod.InputMethodManager mImm -> k
    int mClient -> b
    android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder -> i
    android.view.inputmethod.ExtractedTextRequest mExtractRequest -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> c
    io.flutter.embedding.android.AndroidKeyProcessor keyProcessor -> d
    android.view.inputmethod.EditorInfo mEditorInfo -> f
    io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils -> m
    android.view.View mFlutterView -> a
    android.text.Layout mLayout -> l
    boolean mMonitorCursorUpdate -> h
    android.view.inputmethod.ExtractedText mExtractedText -> j
    io.flutter.plugin.editing.ListenableEditingState mEditable -> e
    61:82:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI) -> <init>
    91:92:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo) -> <init>
    95:104:android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest) -> a
    108:127:android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo() -> a
    402:450:boolean doPerformContextMenuAction(int) -> a
    503:521:void didChangeEditingState(boolean,boolean,boolean) -> a
    137:138:boolean beginBatchEdit() -> beginBatchEdit
    233:234:boolean clearMetaKeyStates(int) -> clearMetaKeyStates
    239:241:void closeConnection() -> closeConnection
    150:151:boolean commitText(java.lang.CharSequence,int) -> commitText
    156:161:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    166:167:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    143:145:boolean endBatchEdit() -> endBatchEdit
    191:192:boolean finishComposingText() -> finishComposingText
    132:132:android.text.Editable getEditable() -> getEditable
    202:209:android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int) -> getExtractedText
    395:398:boolean performContextMenuAction(int) -> performContextMenuAction
    461:488:boolean performEditorAction(int) -> performEditorAction
    455:456:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
    214:228:boolean requestCursorUpdates(int) -> requestCursorUpdates
    301:390:boolean sendKeyEvent(android.view.KeyEvent) -> sendKeyEvent
    172:173:boolean setComposingRegion(int,int) -> setComposingRegion
    179:186:boolean setComposingText(java.lang.CharSequence,int) -> setComposingText
    266:269:boolean setSelection(int,int) -> setSelection
io.flutter.plugin.editing.ListenableEditingState -> io.flutter.plugin.editing.c:
    java.lang.String mTextWhenBeginBatchEdit -> f
    int mComposingEndWhenBeginBatchEdit -> j
    int mSelectionEndWhenBeginBatchEdit -> h
    int mComposingStartWhenBeginBatchEdit -> i
    int mSelectionStartWhenBeginBatchEdit -> g
    java.util.ArrayList mPendingListeners -> d
    int mChangeNotificationDepth -> b
    java.util.ArrayList mListeners -> c
    java.lang.String mToStringCache -> e
    int mBatchEditNestDepth -> a
    android.view.inputmethod.BaseInputConnection mDummyConnection -> k
    58:71:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View) -> <init>
    78:89:void beginBatchEdit() -> a
    126:131:void setComposingRange(int,int) -> a
    137:147:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> a
    150:162:void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher) -> a
    213:216:void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean) -> a
    220:225:void notifyListenersIfNeeded(boolean,boolean,boolean) -> a
    94:120:void endBatchEdit() -> b
    165:172:void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher) -> b
    240:240:int getComposingEnd() -> c
    236:236:int getComposingStart() -> d
    232:232:int getSelectionEnd() -> e
    228:228:int getSelectionStart() -> f
    28:28:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    178:205:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    245:245:java.lang.String toString() -> toString
io.flutter.plugin.editing.ListenableEditingState$1 -> io.flutter.plugin.editing.c$a:
    android.text.Editable val$self -> a
    65:65:void <init>(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable) -> <init>
    68:68:android.text.Editable getEditable() -> getEditable
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher -> io.flutter.plugin.editing.c$b:
    void didChangeEditingState(boolean,boolean,boolean) -> a
io.flutter.plugin.editing.TextInputPlugin -> io.flutter.plugin.editing.d:
    android.view.autofill.AutofillManager afm -> c
    boolean restartAlwaysRequired -> m
    io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget -> e
    boolean mRestartInputPending -> i
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration -> f
    android.view.inputmethod.InputConnection lastInputConnection -> j
    boolean isInputConnectionLocked -> q
    android.view.inputmethod.InputMethodManager mImm -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> d
    android.graphics.Rect lastClientRect -> l
    android.view.View mView -> a
    android.util.SparseArray mAutofillConfigurations -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState -> p
    io.flutter.plugin.editing.ListenableEditingState mEditable -> h
    io.flutter.embedding.android.AndroidKeyProcessor keyProcessor -> o
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback -> n
    69:165:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController) -> <init>
    37:37:android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin) -> a
    37:37:void access$100(io.flutter.plugin.editing.TextInputPlugin,android.view.View) -> a
    37:37:void access$500(io.flutter.plugin.editing.TextInputPlugin,int) -> a
    37:37:void access$600(io.flutter.plugin.editing.TextInputPlugin,double,double,double[]) -> a
    188:189:void setKeyEventProcessor(io.flutter.embedding.android.AndroidKeyProcessor) -> a
    243:290:int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization) -> a
    294:342:android.view.inputmethod.InputConnection createInputConnection(android.view.View,android.view.inputmethod.EditorInfo) -> a
    357:363:void clearPlatformViewClient(int) -> a
    366:367:void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    375:383:void hideTextInput(android.view.View) -> a
    388:406:void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> a
    422:431:void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> a
    438:475:void saveEditableSizeAndTransform(double,double,double[]) -> a
    505:534:void clearTextInputClient() -> a
    564:595:void didChangeEditingState(boolean,boolean,boolean) -> a
    651:652:void notifyValueChanged(java.lang.String) -> a
    660:667:void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> a
    691:692:void onProvideAutofillVirtualStructure(android.view.ViewStructure,int) -> a
    732:763:void autofill(android.util.SparseArray) -> a
    37:37:void access$200(io.flutter.plugin.editing.TextInputPlugin,android.view.View) -> b
    37:37:void access$300(io.flutter.plugin.editing.TextInputPlugin) -> b
    226:235:void destroy() -> b
    370:372:void showTextInput(android.view.View) -> b
    414:418:void setPlatformViewTextInputClient(int) -> b
    37:37:android.view.autofill.AutofillManager access$400(io.flutter.plugin.editing.TextInputPlugin) -> c
    169:169:android.view.inputmethod.InputMethodManager getInputMethodManager() -> c
    347:347:android.view.inputmethod.InputConnection getLastInputConnection() -> d
    205:208:void lockPlatformViewInputConnection() -> e
    216:217:void unlockPlatformViewInputConnection() -> f
    488:493:boolean isRestartAlwaysRequired() -> g
    621:621:boolean needsAutofill() -> h
    625:626:void notifyViewEntered() -> i
    638:643:void notifyViewExited() -> j
io.flutter.plugin.editing.TextInputPlugin$1 -> io.flutter.plugin.editing.d$a:
    io.flutter.plugin.editing.TextInputPlugin this$0 -> a
    100:100:void <init>(io.flutter.plugin.editing.TextInputPlugin) -> <init>
    113:114:void requestAutofill() -> a
    118:119:void finishAutofillContext(boolean) -> a
    131:132:void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> a
    136:137:void setPlatformViewClient(int) -> a
    141:142:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> a
    146:147:void setEditableSizeAndTransform(double,double,double[]) -> a
    156:157:void sendAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    151:152:void clearClient() -> b
    103:104:void show() -> c
    108:109:void hide() -> d
io.flutter.plugin.editing.TextInputPlugin$2 -> io.flutter.plugin.editing.d$b:
    double[] val$matrix -> b
    double[] val$minMax -> c
    boolean val$isAffine -> a
    444:444:void <init>(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[]) -> <init>
    447:462:void inspect(double,double) -> a
io.flutter.plugin.editing.TextInputPlugin$InputTarget -> io.flutter.plugin.editing.d$c:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type -> a
    int id -> b
    546:549:void <init>(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int) -> <init>
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type -> io.flutter.plugin.editing.d$c$a:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES -> d
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PLATFORM_VIEW -> c
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET -> a
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT -> b
    538:537:void <clinit>() -> <clinit>
    537:537:void <init>(java.lang.String,int) -> <init>
    537:537:io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String) -> valueOf
    537:537:io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values() -> values
io.flutter.plugin.editing.TextInputPlugin$MinMax -> io.flutter.plugin.editing.d$d:
    void inspect(double,double) -> a
io.flutter.plugin.localization.LocalizationPlugin -> b.a.c.b.a:
    android.content.Context context -> b
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> a
    23:27:void <init>(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel) -> <init>
    36:37:java.util.Locale resolveNativeLocale(java.util.List) -> a
    125:138:void sendLocalesToFlutter(android.content.res.Configuration) -> a
io.flutter.plugin.mouse.MouseCursorPlugin -> b.a.c.c.a:
    io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> b
    java.util.HashMap systemCursorConstants -> c
    23:34:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel) -> <init>
    18:18:android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String) -> a
    18:18:io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin) -> a
    42:90:android.view.PointerIcon resolveSystemCursor(java.lang.String) -> a
    99:100:void destroy() -> a
io.flutter.plugin.mouse.MouseCursorPlugin$1 -> b.a.c.c.a$a:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> a
    28:28:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin) -> <init>
    31:32:void activateSystemCursor(java.lang.String) -> a
io.flutter.plugin.mouse.MouseCursorPlugin$2 -> b.a.c.c.a$b:
    46:84:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin) -> <init>
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate -> b.a.c.c.a$c:
    android.view.PointerIcon getSystemPointerIcon(int) -> a
io.flutter.plugin.platform.-$$Lambda$PlatformViewsController$1$i4ojtb0pOVFKsQcwzERs83K3E8M -> io.flutter.plugin.platform.a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest f$1 -> b
    io.flutter.plugin.platform.PlatformViewsController$1 f$0 -> a
io.flutter.plugin.platform.-$$Lambda$PlatformViewsController$LCdG-lczcEGgq9dnX04hdHKRzsE -> io.flutter.plugin.platform.b:
    io.flutter.plugin.platform.PlatformViewsController f$0 -> a
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.c:
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    16:16:void <init>() -> <init>
    39:42:boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    51:52:void setAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> a
io.flutter.plugin.platform.PlatformPlugin -> io.flutter.plugin.platform.d:
    io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler -> f
    int mEnabledOverlays -> e
    android.app.Activity activity -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> b
    129:136:void <init>(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate) -> <init>
    28:28:void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> a
    28:28:void access$100(io.flutter.plugin.platform.PlatformPlugin,int) -> a
    28:28:void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> a
    28:28:void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List) -> a
    28:28:void access$400(io.flutter.plugin.platform.PlatformPlugin) -> a
    28:28:void access$500(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> a
    28:28:java.lang.CharSequence access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> a
    28:28:void access$800(io.flutter.plugin.platform.PlatformPlugin,java.lang.String) -> a
    144:145:void destroy() -> a
    148:152:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> a
    156:178:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> a
    181:182:void setSystemChromePreferredOrientations(int) -> a
    187:205:void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> a
    211:240:void setSystemChromeEnabledSystemUIOverlays(java.util.List) -> a
    262:310:void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> a
    326:347:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> a
    356:360:void setClipboardData(java.lang.String) -> a
    28:28:void access$600(io.flutter.plugin.platform.PlatformPlugin) -> b
    250:254:void updateSystemUiOverlays() -> b
    313:319:void popSystemNavigator() -> c
    257:258:void restoreSystemChromeSystemUIOverlays() -> d
io.flutter.plugin.platform.PlatformPlugin$1 -> io.flutter.plugin.platform.d$a:
    io.flutter.plugin.platform.PlatformPlugin this$0 -> a
    60:60:void <init>(io.flutter.plugin.platform.PlatformPlugin) -> <init>
    63:64:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> a
    69:70:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> a
    74:75:void setPreferredOrientations(int) -> a
    80:81:void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> a
    85:86:void showSystemOverlays(java.util.List) -> a
    96:97:void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> a
    107:107:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> a
    112:113:void setClipboardData(java.lang.String) -> a
    101:102:void popSystemNavigator() -> u
    90:91:void restoreSystemUiOverlays() -> v
    117:120:boolean clipboardHasStrings() -> w
io.flutter.plugin.platform.PlatformPlugin$2 -> io.flutter.plugin.platform.d$b:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness -> c
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType -> a
    272:157:void <clinit>() -> <clinit>
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate -> io.flutter.plugin.platform.d$c:
    boolean popSystemNavigator() -> u
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.e:
    void onFlutterViewAttached(android.view.View) -> a
    void onInputConnectionUnlocked() -> a
    void onInputConnectionLocked() -> b
    void dispose() -> c
    void onFlutterViewDetached() -> d
    android.view.View getView() -> e
io.flutter.plugin.platform.PlatformViewFactory -> io.flutter.plugin.platform.f:
    io.flutter.plugin.common.MessageCodec createArgsCodec -> a
    14:16:void <init>(io.flutter.plugin.common.MessageCodec) -> <init>
    io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object) -> a
    32:32:io.flutter.plugin.common.MessageCodec getCreateArgsCodec() -> a
io.flutter.plugin.platform.PlatformViewRegistry -> io.flutter.plugin.platform.g:
    boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory) -> a
io.flutter.plugin.platform.PlatformViewRegistryImpl -> io.flutter.plugin.platform.h:
    java.util.Map viewFactories -> a
    12:14:void <init>() -> <init>
    21:23:boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory) -> a
    27:27:io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String) -> a
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate -> io.flutter.plugin.platform.i:
    void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> a
    void detachAccessibiltyBridge() -> a
    android.view.View getPlatformViewById(java.lang.Integer) -> a
    boolean usesVirtualDisplay(java.lang.Integer) -> b
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.j:
    java.util.HashMap contextToPlatformView -> j
    int nextOverlayLayerId -> n
    java.util.HashSet currentFrameUsedOverlayLayerIds -> p
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> r
    java.util.HashMap vdControllers -> i
    android.content.Context context -> c
    android.util.SparseArray overlayLayerViews -> m
    boolean flutterViewConvertedToImageView -> o
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> h
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> b
    io.flutter.view.TextureRegistry textureRegistry -> e
    java.util.HashSet currentFrameUsedPlatformViewIds -> q
    io.flutter.plugin.platform.PlatformViewRegistryImpl registry -> a
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler -> s
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel -> g
    android.util.SparseArray platformViews -> k
    android.view.View flutterView -> d
    android.util.SparseArray platformViewParent -> l
    411:424:void <init>() -> <init>
    47:47:io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController) -> a
    47:47:void access$1200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController) -> a
    47:47:int access$500(io.flutter.plugin.platform.PlatformViewsController,double) -> a
    47:47:void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int) -> a
    359:394:android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean) -> a
    437:438:void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor) -> a
    471:478:void attachToView(android.view.View) -> a
    499:500:void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> a
    504:505:void detachAccessibiltyBridge() -> a
    517:518:void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin) -> a
    577:584:android.view.View getPlatformViewById(java.lang.Integer) -> a
    593:598:void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController) -> a
    624:628:android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object) -> a
    643:654:android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float) -> a
    660:678:void validateVirtualDisplayDimensions(int,int) -> a
    685:685:int toPhysicalPixels(double) -> a
    708:710:void initializePlatformViewIfNeeded(int) -> a
    733:734:void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    745:761:void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack) -> a
    764:778:void onDisplayOverlaySurface(int,int,int,int,int) -> a
    815:851:void finishFrame(boolean) -> a
    856:858:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView) -> a
    47:47:boolean access$000(int) -> b
    47:47:java.util.HashMap access$1000(io.flutter.plugin.platform.PlatformViewsController) -> b
    47:47:void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController) -> b
    535:545:boolean checkInputConnectionProxy(android.view.View) -> b
    589:589:boolean usesVirtualDisplay(java.lang.Integer) -> b
    601:606:void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController) -> b
    614:619:java.util.List parsePointerPropertiesList(java.lang.Object) -> b
    633:638:java.util.List parsePointerCoordsList(java.lang.Object,float) -> b
    869:869:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface() -> b
    47:47:io.flutter.plugin.editing.TextInputPlugin access$1100(io.flutter.plugin.platform.PlatformViewsController) -> c
    609:609:boolean validateDirection(int) -> c
    878:885:void destroyOverlaySurfaces() -> c
    47:47:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController) -> d
    458:464:void detach() -> d
    47:47:android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController) -> e
    488:495:void detachFromView() -> e
    47:47:android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController) -> f
    522:523:void detachTextInputPlugin() -> f
    47:47:android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController) -> g
    549:549:io.flutter.plugin.platform.PlatformViewRegistry getRegistry() -> g
    47:47:io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController) -> h
    796:797:void lambda$onEndFrame$0() -> h
    47:47:io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController) -> i
    558:558:void onAttachedToJNI() -> i
    47:47:android.view.View access$900(io.flutter.plugin.platform.PlatformViewsController) -> j
    781:783:void onBeginFrame() -> j
    567:568:void onDetachedFromJNI() -> k
    786:812:void onEndFrame() -> l
    571:572:void onPreEngineRestart() -> m
    689:697:void flushAllViews() -> n
    681:681:float getDisplayDensity() -> o
    700:704:void initializeRootImageViewIfNeeded() -> p
io.flutter.plugin.platform.PlatformViewsController$1 -> io.flutter.plugin.platform.j$a:
    io.flutter.plugin.platform.PlatformViewsController this$0 -> a
    118:118:void <init>(io.flutter.plugin.platform.PlatformViewsController) -> <init>
    175:177:long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> a
    217:220:void lambda$createVirtualDisplayForPlatformView$0(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,android.view.View,boolean) -> a
    268:272:void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable) -> a
    299:312:void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch) -> a
    319:320:void setDirection(int,int) -> a
    340:343:void clearFocus(int) -> a
    124:127:void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> b
    153:167:void disposeAndroidViewForPlatformView(int) -> b
    248:251:void disposeVirtualDisplayForPlatformView(int) -> c
    346:347:void ensureValidAndroidVersion(int) -> d
io.flutter.plugin.platform.PlatformViewsController$1$1 -> io.flutter.plugin.platform.j$a$a:
    io.flutter.plugin.platform.VirtualDisplayController val$vdController -> a
    java.lang.Runnable val$onComplete -> b
    io.flutter.plugin.platform.PlatformViewsController$1 this$1 -> c
    288:288:void <init>(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,java.lang.Runnable) -> <init>
    291:293:void run() -> run
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
    121:136:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener) -> <init>
    150:161:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean) -> <init>
    208:210:io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState() -> detachState
    214:215:io.flutter.plugin.platform.PlatformView getView() -> getView
    165:205:void onCreate(android.os.Bundle) -> onCreate
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.SingleViewPresentation$a:
    android.view.View embeddedView -> b
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> a
    469:472:void <init>(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View) -> <init>
    476:476:boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup -> io.flutter.plugin.platform.SingleViewPresentation$b:
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    234:237:void <init>(android.content.Context) -> <init>
    267:267:int atMost(int) -> a
    241:255:void onLayout(boolean,int,int,int,int) -> onLayout
    259:264:void onMeasure(int,int) -> onMeasure
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.SingleViewPresentation$c:
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
    280:281:void <init>(android.content.Context) -> <init>
    284:289:void <init>(android.content.Context,android.view.inputmethod.InputMethodManager) -> <init>
    301:302:android.content.Context createDisplayContext(android.view.Display) -> createDisplayContext
    293:296:java.lang.Object getSystemService(java.lang.String) -> getSystemService
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.SingleViewPresentation$d:
    android.content.Context flutterAppWindowContext -> c
    io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler -> a
    android.view.WindowManager windowManager -> b
    320:323:void <init>(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context) -> <init>
    348:351:android.view.WindowManager getWindowManager() -> a
    355:362:boolean isCalledFromAlertDialog() -> b
    327:344:java.lang.Object getSystemService(java.lang.String) -> getSystemService
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.SingleViewPresentation$e:
    io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup -> c
    io.flutter.plugin.platform.PlatformView platformView -> a
    io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler -> b
    62:62:void <init>() -> <init>
    62:62:io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState) -> a
    62:62:io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup) -> a
    62:62:io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler) -> a
    62:62:io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView) -> a
    62:62:io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState) -> b
    62:62:io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState) -> c
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler -> io.flutter.plugin.platform.SingleViewPresentation$f:
    android.view.WindowManager delegate -> a
    io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView -> b
    387:390:void <init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup) -> <init>
    393:393:android.view.WindowManager getWindowManager() -> a
    422:429:void addView(java.lang.Object[]) -> a
    432:438:void removeView(java.lang.Object[]) -> b
    441:448:void removeViewImmediate(java.lang.Object[]) -> c
    451:458:void updateViewLayout(java.lang.Object[]) -> d
    400:403:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
io.flutter.plugin.platform.VirtualDisplayController -> io.flutter.plugin.platform.k:
    android.content.Context context -> a
    android.hardware.display.VirtualDisplay virtualDisplay -> f
    android.view.View$OnFocusChangeListener focusChangeListener -> e
    io.flutter.plugin.platform.SingleViewPresentation presentation -> g
    io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry -> d
    int densityDpi -> c
    android.view.Surface surface -> h
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> b
    78:96:void <init>(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object) -> <init>
    35:48:io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener) -> a
    99:164:void resize(int,int,java.lang.Runnable) -> a
    167:174:void dispose() -> a
    178:179:void onFlutterViewAttached(android.view.View) -> a
    214:216:void dispatchTouchEvent(android.view.MotionEvent) -> a
    207:209:android.view.View getView() -> b
    186:187:void onFlutterViewDetached() -> c
    193:194:void onInputConnectionLocked() -> d
    200:201:void onInputConnectionUnlocked() -> e
io.flutter.plugin.platform.VirtualDisplayController$1 -> io.flutter.plugin.platform.k$a:
    java.lang.Runnable val$onNewSizeFrameAvailable -> b
    android.view.View val$embeddedView -> a
    122:122:void <init>(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable) -> <init>
    125:143:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    146:146:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
io.flutter.plugin.platform.VirtualDisplayController$1$1 -> io.flutter.plugin.platform.k$a$a:
    io.flutter.plugin.platform.VirtualDisplayController$1 this$1 -> a
    127:127:void <init>(io.flutter.plugin.platform.VirtualDisplayController$1) -> <init>
    139:140:void run() -> run
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener -> io.flutter.plugin.platform.k$b:
    java.lang.Runnable mOnDrawRunnable -> b
    android.view.View mView -> a
    228:231:void <init>(android.view.View,java.lang.Runnable) -> <init>
    221:223:void schedule(android.view.View,java.lang.Runnable) -> a
    235:247:void onDraw() -> onDraw
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1 -> io.flutter.plugin.platform.k$b$a:
    io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0 -> a
    241:241:void <init>(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener) -> <init>
    244:245:void run() -> run
io.flutter.plugins.GeneratedPluginRegistrant -> io.flutter.plugins.GeneratedPluginRegistrant:
    14:14:void <init>() -> <init>
    16:17:void registerWith(io.flutter.embedding.engine.FlutterEngine) -> registerWith
io.flutter.plugins.webviewflutter.DisplayListenerProxy -> io.flutter.plugins.a.a:
    java.util.ArrayList listenersBeforeWebView -> a
    39:39:void <init>() -> <init>
    51:106:void onPostWebViewInitialization(android.hardware.display.DisplayManager) -> a
    46:47:void onPreWebViewInitialization(android.hardware.display.DisplayManager) -> b
    110:140:java.util.ArrayList yoinkDisplayListeners(android.hardware.display.DisplayManager) -> c
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1 -> io.flutter.plugins.a.a$a:
    android.hardware.display.DisplayManager val$displayManager -> b
    java.util.ArrayList val$webViewListeners -> a
    79:79:void <init>(io.flutter.plugins.webviewflutter.DisplayListenerProxy,java.util.ArrayList,android.hardware.display.DisplayManager) -> <init>
    82:85:void onDisplayAdded(int) -> onDisplayAdded
    96:102:void onDisplayChanged(int) -> onDisplayChanged
    89:92:void onDisplayRemoved(int) -> onDisplayRemoved
io.flutter.plugins.webviewflutter.FlutterCookieManager -> io.flutter.plugins.a.b:
    io.flutter.plugin.common.MethodChannel methodChannel -> a
    20:23:void <init>(io.flutter.plugin.common.BinaryMessenger) -> <init>
    27:34:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
    37:38:void dispose() -> a
    41:55:void clearCookies(io.flutter.plugin.common.MethodChannel$Result) -> a
io.flutter.plugins.webviewflutter.FlutterCookieManager$1 -> io.flutter.plugins.a.b$a:
    io.flutter.plugin.common.MethodChannel$Result val$result -> a
    boolean val$hasCookies -> b
    45:45:void <init>(io.flutter.plugin.common.MethodChannel$Result,boolean) -> <init>
    48:49:void onReceiveValue(java.lang.Boolean) -> a
    45:45:void onReceiveValue(java.lang.Object) -> onReceiveValue
io.flutter.plugins.webviewflutter.FlutterWebView -> io.flutter.plugins.a.c:
    android.os.Handler platformThreadHandler -> d
    io.flutter.plugins.webviewflutter.InputAwareWebView webView -> a
    io.flutter.plugins.webviewflutter.FlutterWebViewClient flutterWebViewClient -> c
    io.flutter.plugin.common.MethodChannel methodChannel -> b
    39:81:void <init>(android.content.Context,io.flutter.plugin.common.BinaryMessenger,int,java.util.Map,android.view.View) -> <init>
    90:91:void onInputConnectionUnlocked() -> a
    100:101:void onFlutterViewAttached(android.view.View) -> a
    110:156:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
    182:183:void canGoBack(io.flutter.plugin.common.MethodChannel$Result) -> a
    261:288:void applySettings(java.util.Map) -> a
    306:308:void updateAutoMediaPlaybackPolicy(int) -> a
    311:315:void registerJavaScriptChannelNames(java.util.List) -> a
    318:319:void updateUserAgent(java.lang.String) -> a
    95:96:void onInputConnectionLocked() -> b
    186:187:void canGoForward(io.flutter.plugin.common.MethodChannel$Result) -> b
    236:239:void addJavaScriptChannels(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> b
    291:301:void updateJsMode(int) -> b
    220:222:void evaluateJavaScript(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> c
    251:254:void clearCache(io.flutter.plugin.common.MethodChannel$Result) -> c
    323:326:void dispose() -> c
    105:106:void onFlutterViewDetached() -> d
    159:167:void loadData(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> d
    209:210:void currentUrl(io.flutter.plugin.common.MethodChannel$Result) -> d
    85:85:android.view.View getView() -> e
    171:179:void loadUrl(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> e
    257:258:void getTitle(io.flutter.plugin.common.MethodChannel$Result) -> e
    190:194:void goBack(io.flutter.plugin.common.MethodChannel$Result) -> f
    243:248:void removeJavaScriptChannels(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> f
    197:201:void goForward(io.flutter.plugin.common.MethodChannel$Result) -> g
    214:216:void updateSettings(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> g
    204:206:void reload(io.flutter.plugin.common.MethodChannel$Result) -> h
io.flutter.plugins.webviewflutter.FlutterWebView$1 -> io.flutter.plugins.a.c$a:
    io.flutter.plugin.common.MethodChannel$Result val$result -> a
    226:226:void <init>(io.flutter.plugins.webviewflutter.FlutterWebView,io.flutter.plugin.common.MethodChannel$Result) -> <init>
    229:230:void onReceiveValue(java.lang.String) -> a
    226:226:void onReceiveValue(java.lang.Object) -> onReceiveValue
io.flutter.plugins.webviewflutter.FlutterWebViewClient -> io.flutter.plugins.a.d:
    boolean hasNavigationDelegate -> b
    io.flutter.plugin.common.MethodChannel methodChannel -> a
    33:35:void <init>(io.flutter.plugin.common.MethodChannel) -> <init>
    28:28:boolean access$100(io.flutter.plugins.webviewflutter.FlutterWebViewClient,android.webkit.WebView,android.webkit.WebResourceRequest) -> a
    28:28:void access$200(io.flutter.plugins.webviewflutter.FlutterWebViewClient,android.webkit.WebView,java.lang.String) -> a
    28:28:void access$400(io.flutter.plugins.webviewflutter.FlutterWebViewClient,int,java.lang.String) -> a
    38:66:java.lang.String errorCodeToString(int) -> a
    80:96:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest) -> a
    122:125:void onPageFinished(android.webkit.WebView,java.lang.String) -> a
    128:133:void onWebResourceError(int,java.lang.String) -> a
    137:146:void notifyOnNavigationRequest(java.lang.String,java.util.Map,android.webkit.WebView,boolean) -> a
    152:155:android.webkit.WebViewClient createWebViewClient(boolean) -> a
    162:162:android.webkit.WebViewClient internalCreateWebViewClient() -> a
    28:28:void access$300(io.flutter.plugins.webviewflutter.FlutterWebViewClient,android.webkit.WebView,java.lang.String) -> b
    116:119:void onPageStarted(android.webkit.WebView,java.lang.String) -> b
    203:203:androidx.webkit.WebViewClientCompat internalCreateWebViewClientCompat() -> b
    28:28:boolean access$500(io.flutter.plugins.webviewflutter.FlutterWebViewClient,android.webkit.WebView,java.lang.String) -> c
    100:112:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> c
io.flutter.plugins.webviewflutter.FlutterWebViewClient$1 -> io.flutter.plugins.a.d$a:
    io.flutter.plugins.webviewflutter.FlutterWebViewClient this$0 -> a
    162:162:void <init>(io.flutter.plugins.webviewflutter.FlutterWebViewClient) -> <init>
    176:177:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    171:172:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    183:185:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    190:191:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    198:198:void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    166:166:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest) -> shouldOverrideUrlLoading
io.flutter.plugins.webviewflutter.FlutterWebViewClient$2 -> io.flutter.plugins.a.d$b:
    io.flutter.plugins.webviewflutter.FlutterWebViewClient this$0 -> b
    203:203:void <init>(io.flutter.plugins.webviewflutter.FlutterWebViewClient) -> <init>
    230:232:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat) -> a
    221:222:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    216:217:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    237:238:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    245:245:void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    206:206:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest) -> shouldOverrideUrlLoading
    211:211:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
io.flutter.plugins.webviewflutter.FlutterWebViewClient$OnNavigationRequestResult -> io.flutter.plugins.a.d$c:
    java.util.Map headers -> b
    android.webkit.WebView webView -> c
    java.lang.String url -> a
    249:249:void <init>(java.lang.String,java.util.Map,android.webkit.WebView,io.flutter.plugins.webviewflutter.FlutterWebViewClient$1) -> <init>
    254:258:void <init>(java.lang.String,java.util.Map,android.webkit.WebView) -> <init>
    262:266:void success(java.lang.Object) -> a
    270:270:void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    275:275:void notImplemented() -> a
    280:285:void loadUrl() -> b
io.flutter.plugins.webviewflutter.InputAwareWebView -> io.flutter.plugins.a.e:
    android.view.View threadedInputConnectionProxyView -> a
    android.view.View containerView -> c
    io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView proxyAdapterView -> b
    32:34:void <init>(android.content.Context,android.view.View) -> <init>
    25:25:android.view.View access$000(io.flutter.plugins.webviewflutter.InputAwareWebView) -> a
    37:47:void setContainerView(android.view.View) -> a
    73:74:void dispose() -> a
    55:60:void lockInputConnection() -> b
    159:188:void setInputConnectionTarget(android.view.View) -> b
    64:69:void unlockInputConnection() -> c
    92:114:boolean checkInputConnectionProxy(android.view.View) -> checkInputConnectionProxy
    127:129:void clearFocus() -> clearFocus
    139:148:void resetInputConnection() -> d
io.flutter.plugins.webviewflutter.InputAwareWebView$1 -> io.flutter.plugins.a.e$a:
    android.view.View val$targetView -> a
    io.flutter.plugins.webviewflutter.InputAwareWebView this$0 -> b
    168:168:void <init>(io.flutter.plugins.webviewflutter.InputAwareWebView,android.view.View) -> <init>
    171:186:void run() -> run
io.flutter.plugins.webviewflutter.JavaScriptChannel -> io.flutter.plugins.a.f:
    android.os.Handler platformThreadHandler -> c
    java.lang.String javaScriptChannelName -> b
    io.flutter.plugin.common.MethodChannel methodChannel -> a
    32:36:void <init>(io.flutter.plugin.common.MethodChannel,java.lang.String,android.os.Handler) -> <init>
    20:20:java.lang.String access$000(io.flutter.plugins.webviewflutter.JavaScriptChannel) -> a
    20:20:io.flutter.plugin.common.MethodChannel access$100(io.flutter.plugins.webviewflutter.JavaScriptChannel) -> b
    42:57:void postMessage(java.lang.String) -> postMessage
io.flutter.plugins.webviewflutter.JavaScriptChannel$1 -> io.flutter.plugins.a.f$a:
    java.lang.String val$message -> a
    io.flutter.plugins.webviewflutter.JavaScriptChannel this$0 -> b
    43:43:void <init>(io.flutter.plugins.webviewflutter.JavaScriptChannel,java.lang.String) -> <init>
    46:50:void run() -> run
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView -> io.flutter.plugins.a.g:
    android.os.IBinder windowToken -> b
    android.os.Handler imeHandler -> a
    boolean isLocked -> e
    android.view.inputmethod.InputConnection cachedConnection -> f
    android.view.View rootView -> c
    android.view.View targetView -> d
    39:48:void <init>(android.view.View,android.view.View,android.os.Handler) -> <init>
    57:58:void setLocked(boolean) -> a
    78:78:boolean checkInputConnectionProxy(android.view.View) -> checkInputConnectionProxy
    110:110:android.os.Handler getHandler() -> getHandler
    90:90:android.view.View getRootView() -> getRootView
    105:105:android.os.IBinder getWindowToken() -> getWindowToken
    85:85:boolean hasWindowFocus() -> hasWindowFocus
    100:100:boolean isFocused() -> isFocused
    95:95:boolean onCheckIsTextEditor() -> onCheckIsTextEditor
    68:73:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
io.flutter.plugins.webviewflutter.WebViewFactory -> io.flutter.plugins.a.h:
    io.flutter.plugin.common.BinaryMessenger messenger -> b
    android.view.View containerView -> c
    20:23:void <init>(io.flutter.plugin.common.BinaryMessenger,android.view.View) -> <init>
    28:29:io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object) -> a
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin -> io.flutter.plugins.a.i:
    io.flutter.plugins.webviewflutter.FlutterCookieManager flutterCookieManager -> a
    35:35:void <init>() -> <init>
    67:73:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> a
    55:63:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> b
io.flutter.util.PathUtils -> b.a.d.a:
    20:23:java.lang.String getCacheDirectory(android.content.Context) -> a
    16:16:java.lang.String getDataDirectory(android.content.Context) -> b
    12:12:java.lang.String getFilesDir(android.content.Context) -> c
io.flutter.util.Preconditions -> b.a.d.b:
    51:52:void checkState(boolean,java.lang.Object) -> a
io.flutter.util.Predicate -> b.a.d.c:
    boolean test(java.lang.Object) -> a
io.flutter.view.-$$Lambda$AccessibilityBridge$JBDpWWlF54eN0gel8Jn1hY7yOmE -> io.flutter.view.a:
    io.flutter.view.AccessibilityBridge$SemanticsNode f$0 -> a
    boolean test(java.lang.Object) -> a
io.flutter.view.-$$Lambda$AccessibilityBridge$_xgAbWhyKyeHrMGUVUYzbSFEeBY -> io.flutter.view.b:
    io.flutter.view.-$$Lambda$AccessibilityBridge$_xgAbWhyKyeHrMGUVUYzbSFEeBY INSTANCE -> a
    boolean test(java.lang.Object) -> a
io.flutter.view.AccessibilityBridge -> io.flutter.view.c:
    io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder -> d
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> b
    int accessibilityFeatureFlags -> l
    java.util.List flutterNavigationStack -> p
    io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate -> e
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> s
    int FIRST_RESOURCE_ID -> y
    io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode -> n
    android.database.ContentObserver animationScaleObserver -> x
    android.view.View rootAccessibilityView -> a
    android.view.accessibility.AccessibilityManager accessibilityManager -> c
    java.util.Map flutterSemanticsTree -> g
    int previousRouteId -> q
    java.lang.Integer lastLeftFrameInset -> r
    java.lang.Integer embeddedAccessibilityFocusedNodeId -> j
    android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener -> w
    boolean isReleased -> t
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler -> u
    io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode -> m
    io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject -> o
    io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode -> i
    java.lang.Integer embeddedInputFocusedNodeId -> k
    android.content.ContentResolver contentResolver -> f
    android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener -> v
    java.util.Map customAccessibilityActions -> h
    94:94:void <clinit>() -> <clinit>
    351:358:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate) -> <init>
    371:431:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate) -> <init>
    66:66:android.view.View access$100(io.flutter.view.AccessibilityBridge) -> a
    66:66:int access$1102(io.flutter.view.AccessibilityBridge,int) -> a
    66:66:void access$200(io.flutter.view.AccessibilityBridge,int,int) -> a
    66:66:void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent) -> a
    461:461:boolean isAccessibilityEnabled() -> a
    474:475:void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener) -> a
    494:494:boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode) -> a
    496:496:boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode) -> a
    1083:1115:boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean) -> a
    1199:1206:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int) -> a
    1220:1245:boolean onAccessibilityHoverEvent(android.view.MotionEvent) -> a
    1272:1288:void handleTouchExploration(float,float) -> a
    1300:1309:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> a
    1533:1561:android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String) -> a
    1586:1594:void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    1650:1653:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int) -> a
    2352:2377:boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    66:66:android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge) -> b
    66:66:android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int) -> b
    66:66:io.flutter.view.AccessibilityBridge$SemanticsNode access$6000(io.flutter.view.AccessibilityBridge,int) -> b
    466:466:boolean isTouchExplorationEnabled() -> b
    1178:1184:io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int) -> b
    1319:1530:void updateSemantics(java.nio.ByteBuffer,java.lang.String[]) -> b
    1572:1576:void sendAccessibilityEvent(int,int) -> b
    1604:1620:void sendWindowChangeEvent(io.flutter.view.AccessibilityBridge$SemanticsNode) -> b
    66:66:int access$1100(io.flutter.view.AccessibilityBridge) -> c
    66:66:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6100(io.flutter.view.AccessibilityBridge,int) -> c
    441:457:void release() -> c
    492:492:boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode) -> c
    1633:1639:void sendWindowContentChangeEvent(int) -> c
    527:861:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    66:66:void access$1200(io.flutter.view.AccessibilityBridge) -> d
    1161:1164:io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode() -> d
    1662:1702:void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode) -> d
    66:66:void access$1300(io.flutter.view.AccessibilityBridge) -> e
    1256:1260:void onTouchExplorationExit() -> e
    66:66:boolean access$500(io.flutter.view.AccessibilityBridge) -> f
    479:480:void sendLatestAccessibilityFlagsToFlutter() -> f
    1135:1156:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
    66:66:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge) -> g
    66:66:io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge) -> h
    66:66:io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge) -> i
    66:66:android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge) -> j
    880:1069:boolean performAction(int,int,android.os.Bundle) -> performAction
io.flutter.view.AccessibilityBridge$1 -> io.flutter.view.c$a:
    io.flutter.view.AccessibilityBridge this$0 -> a
    236:236:void <init>(io.flutter.view.AccessibilityBridge) -> <init>
    252:253:void onLongPress(int) -> a
    258:262:void onTooltip(java.lang.String) -> a
    267:269:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> a
    240:241:void announce(java.lang.String) -> b
    246:247:void onTap(int) -> b
    274:276:void updateSemantics(java.nio.ByteBuffer,java.lang.String[]) -> b
io.flutter.view.AccessibilityBridge$2 -> io.flutter.view.c$b:
    io.flutter.view.AccessibilityBridge this$0 -> a
    282:282:void <init>(io.flutter.view.AccessibilityBridge) -> <init>
    285:300:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
io.flutter.view.AccessibilityBridge$3 -> io.flutter.view.c$c:
    io.flutter.view.AccessibilityBridge this$0 -> a
    313:313:void <init>(io.flutter.view.AccessibilityBridge,android.os.Handler) -> <init>
    316:317:void onChange(boolean) -> onChange
    321:338:void onChange(boolean,android.net.Uri) -> onChange
io.flutter.view.AccessibilityBridge$4 -> io.flutter.view.c$d:
    android.view.accessibility.AccessibilityManager val$accessibilityManager -> a
    io.flutter.view.AccessibilityBridge this$0 -> b
    388:388:void <init>(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager) -> <init>
    391:406:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
io.flutter.view.AccessibilityBridge$AccessibilityFeature -> io.flutter.view.c$e:
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION -> b
    io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS -> c
    io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS -> d
    io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES -> e
    int value -> a
    1804:1803:void <clinit>() -> <clinit>
    1810:1812:void <init>(java.lang.String,int,int) -> <init>
    1803:1803:io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String) -> valueOf
    1803:1803:io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values() -> values
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.c$f:
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD -> v
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD -> u
    io.flutter.view.AccessibilityBridge$Action DISMISS -> t
    io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION -> s
    io.flutter.view.AccessibilityBridge$Action TAP -> b
    int value -> a
    io.flutter.view.AccessibilityBridge$Action SCROLL_UP -> f
    io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT -> e
    io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT -> d
    io.flutter.view.AccessibilityBridge$Action LONG_PRESS -> c
    io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN -> j
    io.flutter.view.AccessibilityBridge$Action DECREASE -> i
    io.flutter.view.AccessibilityBridge$Action INCREASE -> h
    io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN -> g
    io.flutter.view.AccessibilityBridge$Action COPY -> n
    io.flutter.view.AccessibilityBridge$Action SET_SELECTION -> m
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER -> l
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER -> k
    io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS -> r
    io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS -> q
    io.flutter.view.AccessibilityBridge$Action PASTE -> p
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> w
    io.flutter.view.AccessibilityBridge$Action CUT -> o
    1738:1737:void <clinit>() -> <clinit>
    1762:1764:void <init>(java.lang.String,int,int) -> <init>
    1737:1737:io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String) -> valueOf
    1737:1737:io.flutter.view.AccessibilityBridge$Action[] values() -> values
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction -> io.flutter.view.c$g:
    int id -> b
    int overrideId -> c
    java.lang.String hint -> e
    int resourceId -> a
    java.lang.String label -> d
    1849:1849:void <init>() -> <init>
    1848:1848:java.lang.String access$2800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction) -> a
    1848:1848:java.lang.String access$2802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String) -> a
    1848:1848:int access$3202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int) -> a
    1848:1848:int access$3200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction) -> b
    1848:1848:java.lang.String access$3302(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String) -> b
    1848:1848:int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int) -> b
    1848:1848:java.lang.String access$3300(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction) -> c
    1848:1848:int access$3902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int) -> c
    1848:1848:int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction) -> d
    1848:1848:int access$3900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction) -> e
io.flutter.view.AccessibilityBridge$Flag -> io.flutter.view.c$h:
    io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED -> l
    io.flutter.view.AccessibilityBridge$Flag IS_HEADER -> k
    io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP -> j
    io.flutter.view.AccessibilityBridge$Flag IS_ENABLED -> i
    io.flutter.view.AccessibilityBridge$Flag IS_IMAGE -> p
    io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN -> o
    io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE -> n
    io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE -> m
    io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING -> t
    io.flutter.view.AccessibilityBridge$Flag[] $VALUES -> x
    io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED -> s
    io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE -> r
    io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION -> q
    io.flutter.view.AccessibilityBridge$Flag IS_LINK -> w
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE -> v
    io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY -> u
    int value -> a
    io.flutter.view.AccessibilityBridge$Flag IS_SELECTED -> d
    io.flutter.view.AccessibilityBridge$Flag IS_CHECKED -> c
    io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE -> b
    io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE -> h
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED -> g
    io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD -> f
    io.flutter.view.AccessibilityBridge$Flag IS_BUTTON -> e
    1770:1769:void <clinit>() -> <clinit>
    1797:1799:void <init>(java.lang.String,int,int) -> <init>
    1769:1769:io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String) -> valueOf
    1769:1769:io.flutter.view.AccessibilityBridge$Flag[] values() -> values
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener -> io.flutter.view.c$i:
    void onAccessibilityChanged(boolean,boolean) -> a
io.flutter.view.AccessibilityBridge$SemanticsNode -> io.flutter.view.c$j:
    int scrollChildren -> j
    int textSelectionExtent -> h
    int currentValueLength -> f
    float right -> D
    int actions -> d
    float left -> B
    java.lang.String value -> p
    int id -> b
    java.lang.String decreasedValue -> r
    float previousScrollPosition -> y
    java.lang.String previousValue -> z
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride -> K
    int previousTextSelectionBase -> w
    java.util.List childrenInHitTestOrder -> I
    int previousFlags -> u
    io.flutter.view.AccessibilityBridge$SemanticsNode parent -> G
    android.graphics.Rect globalRect -> Q
    float scrollExtentMax -> m
    float scrollPosition -> l
    boolean inverseTransformDirty -> M
    float[] inverseTransform -> N
    boolean globalGeometryDirty -> O
    int scrollIndex -> k
    int platformViewId -> i
    float bottom -> E
    java.lang.String label -> o
    int textSelectionBase -> g
    float top -> C
    float[] transform -> F
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    java.lang.String increasedValue -> q
    int maxValueLength -> e
    java.lang.String hint -> s
    int flags -> c
    boolean hadPreviousConfig -> t
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride -> L
    int previousTextSelectionExtent -> x
    int previousActions -> v
    java.util.List customAccessibilityActions -> J
    java.lang.String previousLabel -> A
    java.util.List childrenInTraversalOrder -> H
    float scrollExtentMin -> n
    float[] globalTransform -> P
    1948:1950:void <init>(io.flutter.view.AccessibilityBridge) -> <init>
    1885:1885:java.lang.String access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode) -> A
    1885:1885:java.lang.String access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode) -> B
    1885:1885:int access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode) -> C
    1885:1885:int access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode) -> D
    1885:1885:java.lang.String access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode) -> E
    1885:1885:int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode) -> a
    1885:1885:int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int) -> a
    1885:1885:boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate) -> a
    1885:1885:boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag) -> a
    1885:1885:boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action) -> a
    1885:1885:java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String) -> a
    1885:1885:io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode) -> a
    1885:1885:io.flutter.view.AccessibilityBridge$SemanticsNode access$3800(io.flutter.view.AccessibilityBridge$SemanticsNode,float[]) -> a
    1885:1885:void access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[]) -> a
    1885:1885:boolean access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean) -> a
    1885:1885:void access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean) -> a
    1885:1885:void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List) -> a
    1957:1964:io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate) -> a
    1982:1982:boolean hadAction(io.flutter.view.AccessibilityBridge$Action) -> a
    1990:1993:boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag) -> a
    2003:2006:boolean didChangeLabel() -> a
    2051:2146:void updateWith(java.nio.ByteBuffer,java.lang.String[]) -> a
    2169:2172:io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[]) -> a
    2215:2221:void collectRoutes(java.util.List) -> a
    2242:2302:void updateRecursively(float[],java.util.Set,boolean) -> a
    2305:2311:void transformPoint(float[],float[],float[]) -> a
    2318:2318:float max(float,float,float,float) -> a
    1885:1885:int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode) -> b
    1885:1885:boolean access$4302(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean) -> b
    1885:1885:boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action) -> b
    1885:1885:boolean access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag) -> b
    1888:1888:boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate) -> b
    1974:1974:boolean hasAction(io.flutter.view.AccessibilityBridge$Action) -> b
    1986:1986:boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag) -> b
    1997:1997:boolean didScroll() -> b
    2314:2314:float min(float,float,float,float) -> b
    1885:1885:int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode) -> c
    2149:2159:void ensureInverseTransform() -> c
    1885:1885:android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode) -> d
    2162:2165:android.graphics.Rect getGlobalRect() -> d
    1885:1885:boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode) -> e
    2226:2237:java.lang.String getRouteName() -> e
    1885:1885:int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode) -> f
    2322:2330:java.lang.String getValueLabelHint() -> f
    1885:1885:int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode) -> g
    2193:2207:boolean isFocusable() -> g
    1885:1885:int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode) -> h
    1885:1885:java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode) -> i
    1885:1885:int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode) -> j
    1885:1885:io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode) -> k
    1885:1885:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode) -> l
    1885:1885:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode) -> m
    1885:1885:java.lang.String access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode) -> n
    1885:1885:java.util.List access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode) -> o
    1885:1885:java.util.List access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode) -> p
    1885:1885:java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode) -> q
    1885:1885:java.lang.String access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode) -> r
    1885:1885:boolean access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode) -> s
    1885:1885:boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode) -> t
    1885:1885:float access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode) -> u
    1885:1885:float access$4800(io.flutter.view.AccessibilityBridge$SemanticsNode) -> v
    1885:1885:float access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode) -> w
    1885:1885:int access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode) -> x
    1885:1885:java.util.List access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode) -> y
    1885:1885:boolean access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode) -> z
io.flutter.view.AccessibilityBridge$TextDirection -> io.flutter.view.c$k:
    io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES -> d
    io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN -> a
    io.flutter.view.AccessibilityBridge$TextDirection LTR -> b
    io.flutter.view.AccessibilityBridge$TextDirection RTL -> c
    1816:1815:void <clinit>() -> <clinit>
    1815:1815:void <init>(java.lang.String,int) -> <init>
    1821:1823:io.flutter.view.AccessibilityBridge$TextDirection fromInt(int) -> a
    1815:1815:io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String) -> valueOf
    1815:1815:io.flutter.view.AccessibilityBridge$TextDirection[] values() -> values
io.flutter.view.AccessibilityViewEmbedder -> io.flutter.view.AccessibilityViewEmbedder:
    69:76:void <init>(android.view.View,int) -> <init>
    170:186:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> addChildrenToFlutterNode
    192:195:void cacheVirtualIdMappings(android.view.View,int,int) -> cacheVirtualIdMappings
    136:148:android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View) -> convertToFlutterNode
    217:265:void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo) -> copyAccessibilityFields
    100:126:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    337:342:java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord) -> getRecordFlutterId
    86:94:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect) -> getRootNode
    351:387:boolean onAccessibilityHoverEvent(int,android.view.MotionEvent) -> onAccessibilityHoverEvent
    317:326:boolean performAction(int,int,android.os.Bundle) -> performAction
    395:399:android.view.View platformViewOfNode(int) -> platformViewOfNode
    275:305:boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    155:164:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> setFlutterNodeParent
    205:213:void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo) -> setFlutterNodesTranslateBounds
io.flutter.view.AccessibilityViewEmbedder$1 -> io.flutter.view.AccessibilityViewEmbedder$a:
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.AccessibilityViewEmbedder$b:
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    429:429:void <init>(io.flutter.view.AccessibilityViewEmbedder$1) -> <init>
    438:490:void <init>() -> <init>
    429:429:java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo) -> a
    429:429:int access$200(long) -> a
    429:429:java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int) -> a
    429:429:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord) -> a
    514:544:java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int) -> a
    549:565:java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo) -> a
    612:612:boolean isBitSet(long,int) -> a
    617:627:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord) -> a
    429:429:java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo) -> b
    494:494:int getVirtualNodeId(long) -> b
    499:509:java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo) -> b
    574:608:java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo) -> c
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.AccessibilityViewEmbedder$c:
    android.view.View view -> a
    int id -> b
    402:402:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1) -> <init>
    406:409:void <init>(android.view.View,int) -> <init>
    413:416:boolean equals(java.lang.Object) -> equals
    421:425:int hashCode() -> hashCode
io.flutter.view.FlutterCallbackInformation -> io.flutter.view.FlutterCallbackInformation:
    34:38:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    30:30:io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long) -> lookupCallbackInformation
io.flutter.view.TextureRegistry -> io.flutter.view.d:
    io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture() -> a
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.d$a:
    void release() -> a
    long id() -> b
    android.graphics.SurfaceTexture surfaceTexture() -> c
io.flutter.view.VsyncWaiter -> io.flutter.view.e:
    android.view.WindowManager windowManager -> a
    io.flutter.view.VsyncWaiter instance -> c
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> b
    44:46:void <init>(android.view.WindowManager) -> <init>
    13:13:android.view.WindowManager access$000(io.flutter.view.VsyncWaiter) -> a
    18:21:io.flutter.view.VsyncWaiter getInstance(android.view.WindowManager) -> a
    49:54:void init() -> a
io.flutter.view.VsyncWaiter$1 -> io.flutter.view.e$a:
    io.flutter.view.VsyncWaiter this$0 -> a
    27:27:void <init>(io.flutter.view.VsyncWaiter) -> <init>
    30:41:void asyncWaitForVsync(long) -> a
io.flutter.view.VsyncWaiter$1$1 -> io.flutter.view.e$a$a:
    long val$cookie -> a
    io.flutter.view.VsyncWaiter$1 this$1 -> b
    32:32:void <init>(io.flutter.view.VsyncWaiter$1,long) -> <init>
    35:39:void doFrame(long) -> doFrame
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil -> org.chromium.support_lib_boundary.a.a:
    23:23:void <init>() -> <init>
    66:66:java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler) -> a
    143:143:boolean isDebuggable() -> a
    151:152:boolean containsFeature(java.util.Collection,java.lang.String) -> a
